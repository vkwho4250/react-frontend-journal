[{"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\index.js":"1","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\App.jsx":"2","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Dashboard.jsx":"3","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Item.jsx":"4","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Dropdown.jsx":"5","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\DatesBar.jsx":"6","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Day.jsx":"7","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\TestingFiles\\testData.jsx":"8","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Events.jsx":"9","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\TodaySummary.jsx":"10","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Collections.jsx":"11","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\List.jsx":"12","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Habit.jsx":"13","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\JournalEntry.jsx":"14","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Mood.jsx":"15","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Avatar.jsx":"16","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Animal.jsx":"17","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Header.jsx":"18","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Report.jsx":"19","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Tracker.jsx":"20","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\TrackerDots.jsx":"21"},{"size":157,"mtime":1610939225864,"results":"22","hashOfConfig":"23"},{"size":12029,"mtime":1611421273315,"results":"24","hashOfConfig":"23"},{"size":4692,"mtime":1611347803249,"results":"25","hashOfConfig":"23"},{"size":2137,"mtime":1611190699896,"results":"26","hashOfConfig":"23"},{"size":338,"mtime":1611335409575,"results":"27","hashOfConfig":"23"},{"size":1275,"mtime":1611343600938,"results":"28","hashOfConfig":"23"},{"size":1052,"mtime":1611107139800,"results":"29","hashOfConfig":"23"},{"size":718,"mtime":1611093558415,"results":"30","hashOfConfig":"23"},{"size":181,"mtime":1611095022766,"results":"31","hashOfConfig":"23"},{"size":10114,"mtime":1611345568265,"results":"32","hashOfConfig":"23"},{"size":8612,"mtime":1611336395738,"results":"33","hashOfConfig":"23"},{"size":831,"mtime":1611357477958,"results":"34","hashOfConfig":"23"},{"size":1521,"mtime":1611254576530,"results":"35","hashOfConfig":"23"},{"size":5159,"mtime":1611425739695,"results":"36","hashOfConfig":"23"},{"size":848,"mtime":1611342560860,"results":"37","hashOfConfig":"23"},{"size":1326,"mtime":1611342333498,"results":"38","hashOfConfig":"23"},{"size":413,"mtime":1611346952706,"results":"39","hashOfConfig":"23"},{"size":798,"mtime":1611418291233,"results":"40","hashOfConfig":"23"},{"size":7546,"mtime":1611426645527,"results":"41","hashOfConfig":"23"},{"size":704,"mtime":1611425448754,"results":"42","hashOfConfig":"23"},{"size":704,"mtime":1611425541534,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"mrmoat",{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\index.js",[],["93","94"],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\App.jsx",["95","96"],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Dashboard.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Item.jsx",["97"],"import React, { useState } from \"react\";\r\nimport \"./Item.css\";\r\n\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport EventOutlinedIcon from \"@material-ui/icons/EventOutlined\";\r\nimport AssignmentOutlinedIcon from \"@material-ui/icons/AssignmentOutlined\";\r\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\r\n\r\nfunction Item({ content, itemID, itemType, listTitle, removeItem, editItem }) {\r\n   const [isDone, setDoneStatus] = useState(false);\r\n\r\n   function changeDoneStatus() {\r\n      setDoneStatus(!isDone);\r\n   }\r\n\r\n   function deleteItem() {\r\n      removeItem(itemID);\r\n   }\r\n\r\n   function updateItem() {\r\n      editItem(itemID);\r\n   }\r\n\r\n   return (\r\n      <div className=\"list-item\">\r\n         <li>\r\n            <FiberManualRecordIcon\r\n               className={\r\n                  \"btn-icon type-icon\" +\r\n                  (itemType === \"general\" ? \" invisible\" : \"\")\r\n               }\r\n            />\r\n            <EventOutlinedIcon\r\n               className={\r\n                  \"btn-icon type-icon\" +\r\n                  (itemType === \"event\" ? \" selected\" : \"\")\r\n               }\r\n            />\r\n            <AssignmentOutlinedIcon\r\n               className={\r\n                  \"btn-icon type-icon\" +\r\n                  (itemType === \"todo\" ? \" selected\" : \"\")\r\n               }\r\n            />\r\n            <p onClick={changeDoneStatus} className={isDone ? \"item-done\" : \"\"}>\r\n               {content}\r\n            </p>\r\n\r\n            <div className=\"item-icon-container\">\r\n               {/* <CheckIcon\r\n                  onClick={changeDoneStatus}\r\n                  className=\"btn-icon item-icon check\"\r\n               /> */}\r\n               <EditIcon\r\n                  onClick={updateItem}\r\n                  className=\"btn-icon item-icon edit\"\r\n               />\r\n               <ClearIcon\r\n                  onClick={deleteItem}\r\n                  className=\"btn-icon item-icon clear\"\r\n               />\r\n            </div>\r\n         </li>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Item;\r\n","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Dropdown.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\DatesBar.jsx",["98","99"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./DatesBar.css\";\r\nimport Day from \"./Day\";\r\n\r\nfunction DatesBar({ today, allItems, filterItems }) {\r\n   const [todayMonth, todayDate, todayYear] = today\r\n      .toLocaleDateString(\"en-US\")\r\n      .split(\"/\");\r\n   const lastDay = new Date(todayYear, todayMonth, 0).getDate();\r\n\r\n   let dateArray = [];\r\n   for (let i = 1; i <= lastDay; i++) {\r\n      dateArray.push(new Date(todayYear, todayMonth - 1, i));\r\n   }\r\n\r\n   const [todoDates, setTodoDates] = useState([]);\r\n   const [eventDates, setEventDates] = useState([]);\r\n\r\n   useEffect(() => {\r\n      setTodoDates(\r\n         filterItems(allItems, \"type\", \"todo\").map((item) => item.date)\r\n      );\r\n      setEventDates(\r\n         filterItems(allItems, \"type\", \"event\").map((item) => item.date)\r\n      );\r\n   }, [allItems]);\r\n\r\n   return (\r\n      <div>\r\n         <div id=\"dates-bar\">\r\n            {dateArray.map((date, index) => {\r\n               return (\r\n                  <Day\r\n                     key={index}\r\n                     date={date}\r\n                     todoDates={todoDates}\r\n                     eventDates={eventDates}\r\n                  />\r\n               );\r\n            })}\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default DatesBar;\r\n","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Day.jsx",["100"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Day.css\";\r\n\r\nfunction Day({ date, todoDates, eventDates }) {\r\n   const dayLetter = [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"];\r\n\r\n   const stringDate = date.toISOString().substring(0, 10);\r\n\r\n   const [hasTodo, setHasTodo] = useState(false);\r\n   const [hasEvent, setHasEvent] = useState(false);\r\n\r\n   useEffect(() => {\r\n      todoDates.includes(stringDate) ? setHasTodo(true) : setHasTodo(false);\r\n      eventDates.includes(stringDate) ? setHasEvent(true) : setHasEvent(false);\r\n   }, [todoDates]);\r\n\r\n   return (\r\n      <div className=\"day-container\">\r\n         <div>\r\n            <p>{dayLetter[date.getDay()]}</p>\r\n         </div>\r\n         <div>\r\n            <p>{date.getDate()}</p>\r\n         </div>\r\n\r\n         <div>\r\n            <div\r\n               className={\r\n                  \"indicator\" +\r\n                  (hasTodo ? \" todo\" : \"\") +\r\n                  (hasEvent ? \" event\" : \"\")\r\n               }\r\n            ></div>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Day;\r\n","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\TestingFiles\\testData.jsx",["101"],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Events.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\TodaySummary.jsx",["102","103"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./TodaySummary.css\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\r\n\r\nimport List from \"./List\";\r\nimport Item from \"./Item\";\r\nimport Habit from \"./Habit\";\r\n\r\nfunction TodaySummary({\r\n   // Variables\r\n   todayString,\r\n   allItems,\r\n   habits,\r\n   setHabits,\r\n   // Functions\r\n   filterItems,\r\n   removeItem,\r\n   editItem,\r\n}) {\r\n   const [todoItems, setTodoItems] = useState([]);\r\n   const [eventItems, setEventItems] = useState([]);\r\n   const [action, setAction] = useState(\"CheckOff\");\r\n\r\n   useEffect(() => {\r\n      let temp = filterItems(allItems, \"date\", todayString);\r\n      setTodoItems(filterItems(temp, \"type\", \"todo\"));\r\n      setEventItems(filterItems(temp, \"type\", \"event\"));\r\n   }, [allItems]);\r\n\r\n   // > ============ HANDLING HABITS ====================================\r\n\r\n   const [createHabit, setHabitDisplay] = useState(false);\r\n   const [habitInFocus, setHabitInFocus] = useState(\"\");\r\n   const [displayWarning, setDisplayWarning] = useState(false);\r\n\r\n   const [newHabit, setNewHabit] = useState({\r\n      id: habits.length,\r\n      habit: \"\",\r\n      abbr: \"\",\r\n      dates: [todayString],\r\n      completed: [false],\r\n   });\r\n\r\n   function changeDisplayWarning(event) {\r\n      setDisplayWarning(!displayWarning);\r\n      // if (action === \"Edit\") {\r\n      //    setDisplayWarning(!displayWarning);\r\n      // }\r\n\r\n      event.preventDefault();\r\n   }\r\n\r\n   function displayHabit(event) {\r\n      console.log(event.target);\r\n      if (event.type === \"mouseenter\") {\r\n         setHabitInFocus(event.currentTarget.getAttribute(\"habit\"));\r\n      } else {\r\n         setHabitInFocus(\"\");\r\n      }\r\n   }\r\n\r\n   function enterEditMode() {\r\n      setAction(\"Edit\");\r\n   }\r\n\r\n   function editHabit(event) {\r\n      console.log(event.target);\r\n\r\n      try {\r\n         const habitID = event.target.getAttribute(\"value\");\r\n\r\n         if (action === \"CheckOff\") {\r\n            habits[habitID].dates = [\r\n               ...new Set([...habits[habitID].dates, todayString]),\r\n            ];\r\n            let indexToUpdate = habits[habitID].dates.findIndex(\r\n               (date) => date === todayString\r\n            );\r\n            habits[habitID].completed[indexToUpdate] =\r\n               \"true\" === event.target.getAttribute(\"status\");\r\n         } else {\r\n            changeCreateDisplay(event);\r\n\r\n            setNewHabit({\r\n               id: habits[habitID].id,\r\n               habit: habits[habitID].habit,\r\n               abbr: habits[habitID].abbr,\r\n               dates: habits[habitID].dates,\r\n               completed: habits[habitID].completed,\r\n            });\r\n         }\r\n      } catch (e) {\r\n         console.log(e);\r\n      }\r\n   }\r\n\r\n   function removeHabit(event) {\r\n      console.log(event.currentTarget);\r\n      console.log(newHabit.id);\r\n\r\n      setHabits((prevValue) => {\r\n         return prevValue.filter((habit) => {\r\n            return habit.id !== newHabit.id;\r\n         });\r\n      });\r\n\r\n      changeDisplayWarning(!displayWarning);\r\n      setHabitDisplay(!createHabit);\r\n      setAction(\"CheckOff\");\r\n      event.preventDefault();\r\n   }\r\n\r\n   function addHabit(event) {\r\n      console.log(habits);\r\n\r\n      if (newHabit.habit.trim() === \"\") {\r\n         document.querySelector(\".input-habit\").classList.add(\"empty-input\");\r\n      } else if (newHabit.abbr === \"\") {\r\n         document.querySelector(\".input-habit\").classList.remove(\"empty-input\");\r\n         document.querySelector(\".input-abbr\").classList.add(\"empty-input\");\r\n      } else {\r\n         document.querySelector(\".input-habit\").classList.remove(\"empty-input\");\r\n         document.querySelector(\".input-abbr\").classList.remove(\"empty-input\");\r\n\r\n         setHabits((prevHabits) => {\r\n            if (action === \"Add\") {\r\n               return [...prevHabits, newHabit];\r\n            } else {\r\n               let temp = [...prevHabits];\r\n               temp[newHabit.id] = newHabit;\r\n               return [...temp];\r\n            }\r\n         });\r\n\r\n         setHabitDisplay(false);\r\n         setAction(\"CheckOff\");\r\n         setNewHabit((prevValue) => ({\r\n            id: prevValue.id + 1,\r\n            habit: \"\",\r\n            abbr: \"\",\r\n            dates: [todayString],\r\n            completed: [false],\r\n         }));\r\n      }\r\n\r\n      event.preventDefault();\r\n   }\r\n\r\n   function updateHabit(event) {\r\n      const { name, value } = event.target;\r\n      setNewHabit((prevValue) => {\r\n         return {\r\n            ...prevValue,\r\n            [name]: value,\r\n         };\r\n      });\r\n\r\n      event.stopPropagation();\r\n   }\r\n\r\n   function changeCreateDisplay(event) {\r\n      console.log(event.target);\r\n      setAction(event.currentTarget.getAttribute(\"name\"));\r\n\r\n      if (event.target.getAttribute(\"name\") === \"close-btn\") {\r\n         setHabitDisplay(!createHabit);\r\n         setAction(\"CheckOff\");\r\n      } else if (!createHabit || action !== \"Edit\") {\r\n         setHabitDisplay(!createHabit);\r\n      }\r\n\r\n      setNewHabit({\r\n         id: habits.length,\r\n         habit: \"\",\r\n         abbr: \"\",\r\n         dates: [todayString],\r\n         completed: [false],\r\n      });\r\n   }\r\n\r\n   return (\r\n      <div id=\"today-container\">\r\n         <div id=\"habits-container\">\r\n            <div className=\"habit-header\">\r\n               <div className=\"indicator\"></div>\r\n               <h4>{(action === \"Edit\" ? \"Edit \" : \"\") + \"Habits\"}</h4>\r\n               <div>\r\n                  <AddIcon\r\n                     onClick={changeCreateDisplay}\r\n                     className=\"btn-icon habits-icon\"\r\n                     name=\"Add\"\r\n                  />\r\n                  <EditIcon\r\n                     onClick={enterEditMode}\r\n                     className=\"btn-icon habits-icon\"\r\n                     name=\"Edit\"\r\n                  />\r\n               </div>\r\n            </div>\r\n\r\n            <div className=\"habit-indicators\">\r\n               {habits.map((habit, index) => {\r\n                  return (\r\n                     <Habit\r\n                        key={index}\r\n                        todayString={todayString}\r\n                        habit={habit}\r\n                        displayHabit={displayHabit}\r\n                        habitInFocus={habitInFocus}\r\n                        updateHabit={updateHabit}\r\n                        editHabit={editHabit}\r\n                        action={action}\r\n                     />\r\n                  );\r\n               })}\r\n            </div>\r\n            <div className={\"habit-text\"}>{habitInFocus}</div>\r\n         </div>\r\n         <div\r\n            className=\"create-item\"\r\n            style={\r\n               createHabit\r\n                  ? {\r\n                       top: `${\r\n                          document.querySelector(\"#habits-container\")\r\n                             .clientHeight\r\n                       }px`,\r\n                    }\r\n                  : {}\r\n            }\r\n         >\r\n            <ExpandLessIcon\r\n               onClick={changeCreateDisplay}\r\n               className=\"btn-icon create-close-btn\"\r\n               name=\"close-btn\"\r\n            />\r\n            <form>\r\n               <input\r\n                  className=\"input-habit\"\r\n                  onChange={updateHabit}\r\n                  name=\"habit\"\r\n                  value={newHabit.habit}\r\n                  placeholder=\"New Habit\"\r\n                  minLength=\"1\"\r\n               ></input>\r\n               <input\r\n                  className=\"input-abbr\"\r\n                  onChange={updateHabit}\r\n                  name=\"abbr\"\r\n                  minLength=\"1\"\r\n                  maxLength=\"2\"\r\n                  value={newHabit.abbr}\r\n                  placeholder=\"Abbreviation (max 2 char.)\"\r\n               ></input>\r\n               <div\r\n                  className={\r\n                     action !== \"Add\" ? \"btn-container half\" : \"btn-container\"\r\n                  }\r\n               >\r\n                  <button onClick={addHabit} className=\"create-btn\">\r\n                     {action}\r\n                  </button>\r\n                  <button\r\n                     onClick={changeDisplayWarning}\r\n                     className={\r\n                        \"create-btn \" + (action !== \"Add\" ? \"\" : \" no-display\")\r\n                     }\r\n                  >\r\n                     Delete\r\n                  </button>\r\n                  <div\r\n                     className={\r\n                        displayWarning ? \"delete-warning\" : \"no-display\"\r\n                     }\r\n                  >\r\n                     <p>\r\n                        All records of this habit will be removed. Please\r\n                        confirm you want to proceed.\r\n                     </p>\r\n                     <div className=\"btn-container half\">\r\n                        <button onClick={removeHabit} className={\"create-btn \"}>\r\n                           Confirm\r\n                        </button>\r\n                        <button\r\n                           onClick={changeDisplayWarning}\r\n                           className={\"create-btn \"}\r\n                        >\r\n                           Nevermind\r\n                        </button>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </form>\r\n         </div>\r\n         <div className=\"today-lists\">\r\n            <div>\r\n               <div className=\"indicator event\"></div>\r\n               <List\r\n                  key=\"todayEvent\"\r\n                  listTitle=\"Event\"\r\n                  items={eventItems}\r\n                  removeItem={removeItem}\r\n                  editItem={editItem}\r\n               />\r\n            </div>\r\n            <div>\r\n               <div className=\"indicator todo\"></div>\r\n               <List\r\n                  key=\"todayTodo\"\r\n                  listTitle=\"To Do\"\r\n                  items={todoItems}\r\n                  removeItem={removeItem}\r\n                  editItem={editItem}\r\n               />\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default TodaySummary;\r\n","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Collections.jsx",["104"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Collections.css\";\r\nimport List from \"./List\";\r\nimport Dropdown from \"./Dropdown\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\r\n\r\nfunction Collections({\r\n   // Variables\r\n   todayString,\r\n   allItems,\r\n   newItem,\r\n   setNewItem,\r\n   itemType,\r\n   setItemType,\r\n   listGroups,\r\n   itemsOverflow,\r\n   createDisplay,\r\n   groupingDisplay,\r\n   action,\r\n   //Functions\r\n   filterItems,\r\n   listGrouping,\r\n   addItem,\r\n   removeItem,\r\n   editItem,\r\n   optionSelected,\r\n   changeCreateDisplay,\r\n   changeGroupingDisplay,\r\n}) {\r\n   const [moveUp, setMoveUp] = useState(false);\r\n   const [headerDisplay, setHeaderDisplay] = useState(\"\");\r\n   const [suggestionDisplay, setSuggestionDisplay] = useState(false);\r\n\r\n   const [categories, setCategories] = useState([]);\r\n   // const [listGroups, setListGroups] = useState({\r\n   //    propertyName: \"\",\r\n   //    propertyValues: [],\r\n   // });\r\n\r\n   // function listGrouping(property) {\r\n   //    let temp = allItems.map((item) => item[property]);\r\n   //    temp.sort();\r\n\r\n   //    setListGroups({\r\n   //       propertyName: property,\r\n   //       propertyValues: [...new Set(temp)],\r\n   //    });\r\n   // }\r\n   // const [groupingDisplay, setGroupingDisplay] = useState(false);\r\n\r\n   // function changeGroupingDisplay(event) {\r\n   //    console.log(event.currentTarget);\r\n   //    setGroupingDisplay(!groupingDisplay);\r\n   // }\r\n\r\n   useEffect(() => {\r\n      const categoryList = [\r\n         ...new Set(allItems.map((item) => item[\"category\"])),\r\n      ];\r\n      setCategories(categoryList.sort()); //getting categories for suggesting menu\r\n      listGrouping(\"category\"); //Default Grouping\r\n   }, [allItems]);\r\n\r\n   function updateItem(event) {\r\n      const { name, value } = event.target;\r\n\r\n      if (name === \"type\") {\r\n         setItemType(value);\r\n      }\r\n\r\n      setNewItem((prevValue) => {\r\n         return {\r\n            ...prevValue,\r\n            [name]: value,\r\n         };\r\n      });\r\n\r\n      event.stopPropagation();\r\n   }\r\n\r\n   //* ===== DISPLAY CHANGES ====================================================\r\n   function moveDisplayUp(event) {\r\n      if (event.type === \"mouseenter\") {\r\n         setMoveUp(true);\r\n      } else {\r\n         setMoveUp(false);\r\n      }\r\n   }\r\n\r\n   function changeHeaderDisplay(event) {\r\n      let content = event.currentTarget.getAttribute(\"name\");\r\n      setHeaderDisplay(content);\r\n   }\r\n\r\n   function showSuggestions() {\r\n      setSuggestionDisplay(!suggestionDisplay);\r\n   }\r\n\r\n   return (\r\n      <div id=\"collections\">\r\n         <div className=\"header\">\r\n            <div className={moveUp ? \"move-up header-text\" : \"header-text\"}>\r\n               <h3>Collections</h3>\r\n               <h3>{headerDisplay}</h3>\r\n            </div>\r\n            <div\r\n               onMouseEnter={moveDisplayUp}\r\n               onMouseLeave={moveDisplayUp}\r\n               className=\"icon-container\"\r\n            >\r\n               <AddIcon\r\n                  onClick={changeCreateDisplay}\r\n                  onMouseOver={changeHeaderDisplay}\r\n                  className=\"btn-icon\"\r\n                  name=\"Add an item\"\r\n               />\r\n               <EditIcon\r\n                  onClick={changeGroupingDisplay}\r\n                  onMouseOver={changeHeaderDisplay}\r\n                  className=\"btn-icon\"\r\n                  name=\"Edit groupings\"\r\n               />\r\n            </div>\r\n         </div>\r\n\r\n         <div\r\n            className={\r\n               \"suggestions grouping-options\" + (groupingDisplay ? \" open\" : \"\")\r\n            }\r\n         >\r\n            <ExpandLessIcon\r\n               onClick={changeGroupingDisplay}\r\n               className=\"btn-icon create-close-btn\"\r\n            />\r\n            <ul>\r\n               {[\"category\", \"date\", \"type\"].map((property, index) => {\r\n                  return (\r\n                     <Dropdown\r\n                        key={index}\r\n                        option={property}\r\n                        optionSelected={optionSelected}\r\n                        grouping={property}\r\n                     />\r\n                  );\r\n               })}\r\n            </ul>\r\n         </div>\r\n\r\n         <div className={\"create-item\" + (createDisplay ? \" show\" : \"\")}>\r\n            <ExpandLessIcon\r\n               onClick={changeCreateDisplay}\r\n               className=\"btn-icon create-close-btn\"\r\n            />\r\n            <form>\r\n               <div className=\"input-type-container\">\r\n                  <input\r\n                     type=\"radio\"\r\n                     id=\"radio-general\"\r\n                     className=\"input-radio general\"\r\n                     onChange={updateItem}\r\n                     name=\"type\"\r\n                     value=\"general\"\r\n                     checked={itemType === \"general\" ? true : false}\r\n                  ></input>\r\n                  <label htmlFor=\"radio-general\">General</label>\r\n                  <input\r\n                     type=\"radio\"\r\n                     id=\"radio-todo\"\r\n                     className=\"input-radio todo\"\r\n                     onChange={updateItem}\r\n                     name=\"type\"\r\n                     value=\"todo\"\r\n                     checked={itemType === \"todo\" ? true : false}\r\n                  ></input>\r\n                  <label htmlFor=\"radio-todo\">To Do</label>\r\n                  <input\r\n                     type=\"radio\"\r\n                     id=\"radio-event\"\r\n                     className=\"input-radio event\"\r\n                     onChange={updateItem}\r\n                     name=\"type\"\r\n                     value=\"event\"\r\n                     checked={itemType === \"event\" ? true : false}\r\n                  ></input>\r\n                  <label htmlFor=\"radio-event\">Event</label>\r\n               </div>\r\n\r\n               <input\r\n                  className=\"input-content\"\r\n                  onChange={updateItem}\r\n                  name=\"content\"\r\n                  value={newItem.content}\r\n                  placeholder=\"Item\"\r\n                  minLength=\"1\"\r\n               ></input>\r\n               <input\r\n                  className=\"input-category\"\r\n                  onChange={updateItem}\r\n                  onFocus={showSuggestions}\r\n                  onBlur={showSuggestions}\r\n                  name=\"category\"\r\n                  value={newItem.category}\r\n                  placeholder=\"Category\"\r\n                  minLength=\"1\"\r\n               ></input>\r\n               <Collapse in={suggestionDisplay}>\r\n                  <div className=\"suggestions\">\r\n                     <ul>\r\n                        {categories.map((category, index) => {\r\n                           return (\r\n                              <Dropdown\r\n                                 key={index}\r\n                                 option={category}\r\n                                 optionSelected={optionSelected}\r\n                                 grouping=\"category-suggestions\"\r\n                              />\r\n                           );\r\n                        })}\r\n                     </ul>\r\n                  </div>\r\n               </Collapse>\r\n               <input\r\n                  className=\"input-date\"\r\n                  type=\"date\"\r\n                  min={todayString}\r\n                  onChange={updateItem}\r\n                  name=\"date\"\r\n                  value={newItem.date}\r\n               ></input>\r\n               <button className=\"create-btn\" onClick={addItem}>\r\n                  {action}\r\n               </button>\r\n            </form>\r\n         </div>\r\n\r\n         <div className=\"list-container\">\r\n            {listGroups.propertyValues.map((grouping, index) => {\r\n               let listItems = filterItems(\r\n                  allItems,\r\n                  listGroups.propertyName,\r\n                  grouping\r\n               );\r\n               return (\r\n                  <List\r\n                     key={index}\r\n                     listTitle={grouping}\r\n                     items={listItems}\r\n                     removeItem={removeItem}\r\n                     editItem={editItem}\r\n                  />\r\n               );\r\n            })}\r\n         </div>\r\n         <div className=\"fade-indicator\">\r\n            <ExpandMoreIcon\r\n               className={\"btn-icon expand\" + (itemsOverflow ? \" show\" : \"\")}\r\n            />\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Collections;\r\n","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\List.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Habit.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\JournalEntry.jsx",["105"],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Mood.jsx",["106"],"import React, { useState } from \"react\";\r\nimport \"./Mood.css\";\r\n\r\nimport { ReactComponent as MoodSelector } from \"./images/expressions.svg\";\r\n\r\nfunction Mood({\r\n   mood,\r\n   avatar,\r\n   changeMoodFocus,\r\n   chosenMood,\r\n   updateEntry,\r\n   action,\r\n   revealChoices,\r\n}) {\r\n   return (\r\n      <div\r\n         onClick={action === \"select mood\" ? updateEntry : revealChoices}\r\n         onMouseEnter={changeMoodFocus}\r\n         onMouseLeave={changeMoodFocus}\r\n         className={\r\n            `mood-box ${mood} ${avatar}` +\r\n            (chosenMood === mood ? \" in-front\" : \"\")\r\n         }\r\n         name=\"mood\"\r\n         value={mood}\r\n         action={action}\r\n      >\r\n         <MoodSelector\r\n            className=\"svg-expression\"\r\n            value={mood}\r\n            avatar={avatar}\r\n         />\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Mood;\r\n","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Avatar.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Animal.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Header.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Report.jsx",["107","108","109","110"],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Tracker.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\TrackerDots.jsx",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":125,"column":7,"nodeType":"117","endLine":125,"endColumn":9,"suggestions":"118"},{"ruleId":"119","severity":1,"message":"120","line":226,"column":16,"nodeType":"121","messageId":"122","endLine":226,"endColumn":36,"fix":"123"},{"ruleId":"124","severity":1,"message":"125","line":4,"column":8,"nodeType":"126","messageId":"127","endLine":4,"endColumn":17},{"ruleId":"124","severity":1,"message":"128","line":6,"column":23,"nodeType":"126","messageId":"127","endLine":6,"endColumn":32},{"ruleId":"115","severity":1,"message":"129","line":26,"column":7,"nodeType":"117","endLine":26,"endColumn":17,"suggestions":"130"},{"ruleId":"115","severity":1,"message":"131","line":15,"column":7,"nodeType":"117","endLine":15,"endColumn":18,"suggestions":"132"},{"ruleId":"124","severity":1,"message":"133","line":1,"column":8,"nodeType":"126","messageId":"127","endLine":1,"endColumn":13},{"ruleId":"124","severity":1,"message":"134","line":8,"column":8,"nodeType":"126","messageId":"127","endLine":8,"endColumn":12},{"ruleId":"115","severity":1,"message":"135","line":30,"column":7,"nodeType":"117","endLine":30,"endColumn":17,"suggestions":"136"},{"ruleId":"115","severity":1,"message":"137","line":67,"column":7,"nodeType":"117","endLine":67,"endColumn":17,"suggestions":"138"},{"ruleId":"124","severity":1,"message":"139","line":1,"column":27,"nodeType":"126","messageId":"127","endLine":1,"endColumn":36},{"ruleId":"124","severity":1,"message":"140","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":25},{"ruleId":"124","severity":1,"message":"141","line":5,"column":8,"nodeType":"126","messageId":"127","endLine":5,"endColumn":12},{"ruleId":"124","severity":1,"message":"142","line":9,"column":8,"nodeType":"126","messageId":"127","endLine":9,"endColumn":20},{"ruleId":"115","severity":1,"message":"143","line":39,"column":7,"nodeType":"117","endLine":39,"endColumn":34,"suggestions":"144"},{"ruleId":"145","severity":1,"message":"146","line":42,"column":24,"nodeType":"147","messageId":"148","endLine":42,"endColumn":35},"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'todayString'. Either include it or remove the dependency array.","ArrayExpression",["151"],"no-useless-computed-key","Unnecessarily computed property [\"category\"] found.","Property","unnecessarilyComputedProperty",{"range":"152","text":"153"},"no-unused-vars","'CheckIcon' is defined but never used.","Identifier","unusedVar","'todayDate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'filterItems'. Either include it or remove the dependency array. If 'filterItems' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["154"],"React Hook useEffect has missing dependencies: 'eventDates' and 'stringDate'. Either include them or remove the dependency array.",["155"],"'React' is defined but never used.","'Item' is defined but never used.","React Hook useEffect has missing dependencies: 'filterItems' and 'todayString'. Either include them or remove the dependency array. If 'filterItems' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["156"],"React Hook useEffect has a missing dependency: 'listGrouping'. Either include it or remove the dependency array. If 'listGrouping' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["157"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'Mood' is defined but never used.","'JournalEntry' is defined but never used.","React Hook useEffect has a missing dependency: 'today'. Either include it or remove the dependency array. If 'setTrackerDates' needs the current value of 'today', you can also switch to useReducer instead of useState and read 'today' in the reducer.",["158"],"no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","no-global-assign","no-unsafe-negation",{"desc":"159","fix":"160"},[9002,9014],"\"category\"",{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},"Update the dependencies array to be: [todayString]",{"range":"171","text":"172"},"Update the dependencies array to be: [allItems, filterItems]",{"range":"173","text":"174"},"Update the dependencies array to be: [eventDates, stringDate, todoDates]",{"range":"175","text":"176"},"Update the dependencies array to be: [allItems, filterItems, todayString]",{"range":"177","text":"178"},"Update the dependencies array to be: [allItems, listGrouping]",{"range":"179","text":"180"},"Update the dependencies array to be: [allItems, entries, habits, today]",{"range":"181","text":"182"},[6053,6055],"[todayString]",[821,831],"[allItems, filterItems]",[541,552],"[eventDates, stringDate, todoDates]",[866,876],"[allItems, filterItems, todayString]",[1924,1934],"[allItems, listGrouping]",[1299,1326],"[allItems, entries, habits, today]"]