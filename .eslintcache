[{"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\index.js":"1","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\App.jsx":"2","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Dashboard.jsx":"3","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Item.jsx":"4","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Dropdown.jsx":"5","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\DatesBar.jsx":"6","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Day.jsx":"7","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\TestingFiles\\testData.jsx":"8","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Events.jsx":"9","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\TodaySummary.jsx":"10","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Collections.jsx":"11","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\List.jsx":"12","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Habit.jsx":"13","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\JournalEntry.jsx":"14","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Mood.jsx":"15"},{"size":157,"mtime":1610939225864,"results":"16","hashOfConfig":"17"},{"size":8703,"mtime":1611276546599,"results":"18","hashOfConfig":"17"},{"size":4874,"mtime":1611276446199,"results":"19","hashOfConfig":"17"},{"size":2137,"mtime":1611190699896,"results":"20","hashOfConfig":"17"},{"size":318,"mtime":1611094196098,"results":"21","hashOfConfig":"17"},{"size":1212,"mtime":1611169230417,"results":"22","hashOfConfig":"17"},{"size":1052,"mtime":1611107139800,"results":"23","hashOfConfig":"17"},{"size":718,"mtime":1611093558415,"results":"24","hashOfConfig":"17"},{"size":181,"mtime":1611095022766,"results":"25","hashOfConfig":"17"},{"size":10014,"mtime":1611254600712,"results":"26","hashOfConfig":"17"},{"size":10899,"mtime":1611191538468,"results":"27","hashOfConfig":"17"},{"size":831,"mtime":1611169700103,"results":"28","hashOfConfig":"17"},{"size":1521,"mtime":1611254576530,"results":"29","hashOfConfig":"17"},{"size":5110,"mtime":1611284721684,"results":"30","hashOfConfig":"17"},{"size":782,"mtime":1611281287242,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"mrmoat",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\index.js",[],["67","68"],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\App.jsx",["69","70"],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Dashboard.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Item.jsx",["71"],"import React, { useState } from \"react\";\r\nimport \"./Item.css\";\r\n\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport EventOutlinedIcon from \"@material-ui/icons/EventOutlined\";\r\nimport AssignmentOutlinedIcon from \"@material-ui/icons/AssignmentOutlined\";\r\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\r\n\r\nfunction Item({ content, itemID, itemType, listTitle, removeItem, editItem }) {\r\n   const [isDone, setDoneStatus] = useState(false);\r\n\r\n   function changeDoneStatus() {\r\n      setDoneStatus(!isDone);\r\n   }\r\n\r\n   function deleteItem() {\r\n      removeItem(itemID);\r\n   }\r\n\r\n   function updateItem() {\r\n      editItem(itemID);\r\n   }\r\n\r\n   return (\r\n      <div className=\"list-item\">\r\n         <li>\r\n            <FiberManualRecordIcon\r\n               className={\r\n                  \"btn-icon type-icon\" +\r\n                  (itemType === \"general\" ? \" invisible\" : \"\")\r\n               }\r\n            />\r\n            <EventOutlinedIcon\r\n               className={\r\n                  \"btn-icon type-icon\" +\r\n                  (itemType === \"event\" ? \" selected\" : \"\")\r\n               }\r\n            />\r\n            <AssignmentOutlinedIcon\r\n               className={\r\n                  \"btn-icon type-icon\" +\r\n                  (itemType === \"todo\" ? \" selected\" : \"\")\r\n               }\r\n            />\r\n            <p onClick={changeDoneStatus} className={isDone ? \"item-done\" : \"\"}>\r\n               {content}\r\n            </p>\r\n\r\n            <div className=\"item-icon-container\">\r\n               {/* <CheckIcon\r\n                  onClick={changeDoneStatus}\r\n                  className=\"btn-icon item-icon check\"\r\n               /> */}\r\n               <EditIcon\r\n                  onClick={updateItem}\r\n                  className=\"btn-icon item-icon edit\"\r\n               />\r\n               <ClearIcon\r\n                  onClick={deleteItem}\r\n                  className=\"btn-icon item-icon clear\"\r\n               />\r\n            </div>\r\n         </li>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Item;\r\n","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Dropdown.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\DatesBar.jsx",["72","73"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./DatesBar.css\";\r\nimport Day from \"./Day\";\r\n\r\nfunction DatesBar({ today, allItems, filterItems }) {\r\n   const [todayMonth, todayDate, todayYear] = today\r\n      .toLocaleDateString(\"en-US\")\r\n      .split(\"/\");\r\n   const lastDay = new Date(todayYear, todayMonth, 0).getDate();\r\n\r\n   let dateArray = [];\r\n   for (let i = 1; i <= lastDay; i++) {\r\n      dateArray.push(new Date(todayYear, todayMonth - 1, i));\r\n   }\r\n\r\n   const [todoDates, setTodoDates] = useState([]);\r\n   const [eventDates, setEventDates] = useState([]);\r\n\r\n   useEffect(() => {\r\n      setTodoDates(\r\n         filterItems(allItems, \"type\", \"todo\").map((item) => item.date)\r\n      );\r\n      setEventDates(\r\n         filterItems(allItems, \"type\", \"event\").map((item) => item.date)\r\n      );\r\n   }, [allItems]);\r\n\r\n   return (\r\n      <div id=\"dates-bar\">\r\n         {dateArray.map((date, index) => {\r\n            return (\r\n               <Day\r\n                  key={index}\r\n                  date={date}\r\n                  todoDates={todoDates}\r\n                  eventDates={eventDates}\r\n               />\r\n            );\r\n         })}\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default DatesBar;\r\n","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Day.jsx",["74"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Day.css\";\r\n\r\nfunction Day({ date, todoDates, eventDates }) {\r\n   const dayLetter = [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"];\r\n\r\n   const stringDate = date.toISOString().substring(0, 10);\r\n\r\n   const [hasTodo, setHasTodo] = useState(false);\r\n   const [hasEvent, setHasEvent] = useState(false);\r\n\r\n   useEffect(() => {\r\n      todoDates.includes(stringDate) ? setHasTodo(true) : setHasTodo(false);\r\n      eventDates.includes(stringDate) ? setHasEvent(true) : setHasEvent(false);\r\n   }, [todoDates]);\r\n\r\n   return (\r\n      <div className=\"day-container\">\r\n         <div>\r\n            <p>{dayLetter[date.getDay()]}</p>\r\n         </div>\r\n         <div>\r\n            <p>{date.getDate()}</p>\r\n         </div>\r\n\r\n         <div>\r\n            <div\r\n               className={\r\n                  \"indicator\" +\r\n                  (hasTodo ? \" todo\" : \"\") +\r\n                  (hasEvent ? \" event\" : \"\")\r\n               }\r\n            ></div>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Day;\r\n","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\TestingFiles\\testData.jsx",["75"],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Events.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\TodaySummary.jsx",["76","77"],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Collections.jsx",["78","79"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Collections.css\";\r\nimport List from \"./List\";\r\nimport Dropdown from \"./Dropdown\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\r\n\r\nfunction Collections({\r\n   // Variables\r\n   todayString,\r\n   allItems,\r\n   newItem,\r\n   setNewItem,\r\n   itemType,\r\n   setItemType,\r\n   itemsOverflow,\r\n   createDisplay,\r\n   action,\r\n   //Functions\r\n   filterItems,\r\n   addItem,\r\n   removeItem,\r\n   editItem,\r\n   optionSelected,\r\n   changeCreateDisplay,\r\n}) {\r\n   // > ==== =====================\r\n\r\n   // const todayString = today.toISOString().substring(0, 10);\r\n\r\n   // const [itemsOverflow, setItemsOverflow] = useState(false);\r\n   // const [createDisplay, setCreateDisplay] = useState(false);\r\n   // const [itemType, setItemType] = useState(\"general\");\r\n   // const [suggestionDisplay, setSuggestionDisplay] = useState(false);\r\n   // const [action, setAction] = useState(\"Add\");\r\n   // const [newItem, setNewItem] = useState({\r\n   //    id: allItems.length,\r\n   //    type: \"general\",\r\n   //    category: \"\",\r\n   //    content: \"\",\r\n   //    date: todayString,\r\n   // });\r\n\r\n   // function itemsInList(listTitle) {\r\n   //    console.log(\"itemsInList\");\r\n\r\n   //    return allItems.filter((item) => {\r\n   //       return item.category === listTitle;\r\n   //    });\r\n   // }\r\n\r\n   // function editItem(itemID) {\r\n   //    setAction(\"Submit Edit\");\r\n   //    setCreateDisplay(true);\r\n   //    setItemType(allItems[itemID].type);\r\n\r\n   //    setNewItem({\r\n   //       id: itemID,\r\n   //       type: allItems[itemID].type,\r\n   //       category: allItems[itemID].category,\r\n   //       content: allItems[itemID].content,\r\n   //       date: allItems[itemID].date,\r\n   //    });\r\n   // }\r\n\r\n   // function addItem(event) {\r\n   //    console.log(allItems);\r\n   //    if (newItem.content.trim() === \"\") {\r\n   //       document.querySelector(\".input-content\").classList.add(\"empty-input\");\r\n   //    } else if (newItem.category.trim() === \"\") {\r\n   //       document\r\n   //          .querySelector(\".input-content\")\r\n   //          .classList.remove(\"empty-input\");\r\n   //       document.querySelector(\".input-category\").classList.add(\"empty-input\");\r\n   //    } else {\r\n   //       document\r\n   //          .querySelector(\".input-content\")\r\n   //          .classList.remove(\"empty-input\");\r\n   //       document\r\n   //          .querySelector(\".input-category\")\r\n   //          .classList.remove(\"empty-input\");\r\n\r\n   //       setAllItems((prevItems) => {\r\n   //          if (action === \"Add\") {\r\n   //             return [...prevItems, newItem];\r\n   //          } else {\r\n   //             let temp = [...prevItems];\r\n   //             temp[newItem.id] = newItem;\r\n   //             return [...temp];\r\n   //          }\r\n   //       });\r\n\r\n   //       setCreateDisplay(false);\r\n   //       setAction(\"Add\");\r\n   //       setNewItem((prevValue) => ({\r\n   //          id: prevValue.id + 1,\r\n   //          todo: \"general\",\r\n   //          category: \"\",\r\n   //          content: \"\",\r\n   //          date: todayString,\r\n   //       }));\r\n   //    }\r\n\r\n   //    areItemsOverflowing();\r\n   //    event.preventDefault();\r\n   // }\r\n\r\n   // function removeItem(itemID) {\r\n   //    setAllItems((prevItems) => {\r\n   //       return prevItems.filter((item) => {\r\n   //          return item.id !== itemID;\r\n   //       });\r\n   //    });\r\n\r\n   //    areItemsOverflowing();\r\n   // }\r\n\r\n   // function optionSelected(option) {\r\n   //    setNewItem((prevContent) => {\r\n   //       return {\r\n   //          ...prevContent,\r\n   //          [\"category\"]: option,\r\n   //       };\r\n   //    });\r\n   // }\r\n\r\n   // function changeCreateDisplay() {\r\n   //    setCreateDisplay(!createDisplay);\r\n   //    setNewItem({\r\n   //       id: allItems.length,\r\n   //       type: \"general\",\r\n   //       category: \"\",\r\n   //       content: \"\",\r\n   //       date: todayString,\r\n   //    });\r\n   //    setItemType(\"general\");\r\n   // }\r\n\r\n   // function areItemsOverflowing() {\r\n   //    if (\r\n   //       document.querySelector(\".list-container\").scrollHeight >\r\n   //       document.querySelector(\".list-container\").offsetHeight\r\n   //    ) {\r\n   //       setItemsOverflow(true);\r\n   //    } else {\r\n   //       setItemsOverflow(false);\r\n   //    }\r\n   // }\r\n\r\n   // > =========================\r\n\r\n   //Collection\r\n\r\n   const [moveUp, setMoveUp] = useState(false);\r\n   const [headerDisplay, setHeaderDisplay] = useState(\"\");\r\n   const [suggestionDisplay, setSuggestionDisplay] = useState(false);\r\n\r\n   const [categories, setCategories] = useState([]);\r\n\r\n   useEffect(() => {\r\n      listCategories();\r\n   }, [allItems]);\r\n\r\n   //! Need to change this function to adapt to other \"groupings\"\r\n   function listCategories() {\r\n      let temp = allItems.map((item) => item.category);\r\n      temp.sort();\r\n\r\n      setCategories([...new Set(temp)]);\r\n   }\r\n\r\n   function updateItem(event) {\r\n      const { name, value } = event.target;\r\n\r\n      if (name === \"type\") {\r\n         setItemType(value);\r\n      }\r\n\r\n      setNewItem((prevValue) => {\r\n         return {\r\n            ...prevValue,\r\n            [name]: value,\r\n         };\r\n      });\r\n\r\n      event.stopPropagation();\r\n   }\r\n\r\n   //* ===== DISPLAY CHANGES ====================================================\r\n   function moveDisplayUp(event) {\r\n      if (event.type === \"mouseenter\") {\r\n         setMoveUp(true);\r\n      } else {\r\n         setMoveUp(false);\r\n      }\r\n   }\r\n\r\n   function changeHeaderDisplay(event) {\r\n      let content = event.currentTarget.getAttribute(\"name\");\r\n      setHeaderDisplay(content);\r\n   }\r\n\r\n   function showSuggestions() {\r\n      setSuggestionDisplay(!suggestionDisplay);\r\n   }\r\n\r\n   return (\r\n      <div id=\"collections\">\r\n         <div className=\"header\">\r\n            <div className={moveUp ? \"move-up header-text\" : \"header-text\"}>\r\n               <h3>Collections</h3>\r\n               <h3>{headerDisplay}</h3>\r\n            </div>\r\n            <div\r\n               onMouseEnter={moveDisplayUp}\r\n               onMouseLeave={moveDisplayUp}\r\n               className=\"icon-container\"\r\n            >\r\n               <AddIcon\r\n                  onClick={changeCreateDisplay}\r\n                  onMouseOver={changeHeaderDisplay}\r\n                  className=\"btn-icon\"\r\n                  name=\"Add an item\"\r\n               />\r\n               <EditIcon\r\n                  onMouseOver={changeHeaderDisplay}\r\n                  className=\"btn-icon\"\r\n                  name=\"Edit categories\"\r\n               />\r\n            </div>\r\n         </div>\r\n         <div className={\"create-item\" + (createDisplay ? \" show\" : \"\")}>\r\n            <ExpandLessIcon\r\n               onClick={changeCreateDisplay}\r\n               className=\"btn-icon create-close-btn\"\r\n            />\r\n            <form>\r\n               <div className=\"input-type-container\">\r\n                  <input\r\n                     type=\"radio\"\r\n                     id=\"radio-general\"\r\n                     className=\"input-radio general\"\r\n                     onChange={updateItem}\r\n                     name=\"type\"\r\n                     value=\"general\"\r\n                     checked={itemType === \"general\" ? true : false}\r\n                  ></input>\r\n                  <label htmlFor=\"radio-general\">General</label>\r\n                  <input\r\n                     type=\"radio\"\r\n                     id=\"radio-todo\"\r\n                     className=\"input-radio todo\"\r\n                     onChange={updateItem}\r\n                     name=\"type\"\r\n                     value=\"todo\"\r\n                     checked={itemType === \"todo\" ? true : false}\r\n                  ></input>\r\n                  <label htmlFor=\"radio-todo\">To Do</label>\r\n                  <input\r\n                     type=\"radio\"\r\n                     id=\"radio-event\"\r\n                     className=\"input-radio event\"\r\n                     onChange={updateItem}\r\n                     name=\"type\"\r\n                     value=\"event\"\r\n                     checked={itemType === \"event\" ? true : false}\r\n                  ></input>\r\n                  <label htmlFor=\"radio-event\">Event</label>\r\n               </div>\r\n\r\n               <input\r\n                  className=\"input-content\"\r\n                  onChange={updateItem}\r\n                  name=\"content\"\r\n                  value={newItem.content}\r\n                  placeholder=\"Item\"\r\n                  minLength=\"1\"\r\n               ></input>\r\n               <input\r\n                  className=\"input-category\"\r\n                  onChange={updateItem}\r\n                  onFocus={showSuggestions}\r\n                  onBlur={showSuggestions}\r\n                  name=\"category\"\r\n                  value={newItem.category}\r\n                  placeholder=\"Category\"\r\n                  minLength=\"1\"\r\n               ></input>\r\n               <Collapse in={suggestionDisplay}>\r\n                  <div className=\"suggestions\">\r\n                     <ul>\r\n                        {categories.map((category, index) => {\r\n                           if (category !== \"\") {\r\n                              return (\r\n                                 <Dropdown\r\n                                    key={index}\r\n                                    option={category}\r\n                                    optionSelected={optionSelected}\r\n                                 />\r\n                              );\r\n                           }\r\n                        })}\r\n                     </ul>\r\n                  </div>\r\n               </Collapse>\r\n               <input\r\n                  className=\"input-date\"\r\n                  type=\"date\"\r\n                  min={todayString}\r\n                  onChange={updateItem}\r\n                  name=\"date\"\r\n                  value={newItem.date}\r\n               ></input>\r\n               <button className=\"create-btn\" onClick={addItem}>\r\n                  {action}\r\n               </button>\r\n            </form>\r\n         </div>\r\n\r\n         <div className=\"list-container\">\r\n            {categories.map((listTitle, index) => {\r\n               let listItems = filterItems(allItems, \"category\", listTitle);\r\n               return (\r\n                  <List\r\n                     key={index}\r\n                     listTitle={listTitle}\r\n                     items={listItems}\r\n                     removeItem={removeItem}\r\n                     editItem={editItem}\r\n                  />\r\n               );\r\n            })}\r\n         </div>\r\n         <div className=\"fade-indicator\">\r\n            <ExpandMoreIcon\r\n               className={\"btn-icon expand\" + (itemsOverflow ? \" show\" : \"\")}\r\n            />\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Collections;\r\n","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\List.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Habit.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\JournalEntry.jsx",["80","81"],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Mood.jsx",["82"],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":29,"column":13,"nodeType":"89","messageId":"90","endLine":29,"endColumn":25},{"ruleId":"91","severity":1,"message":"92","line":210,"column":13,"nodeType":"93","messageId":"94","endLine":210,"endColumn":33,"fix":"95"},{"ruleId":"87","severity":1,"message":"96","line":4,"column":8,"nodeType":"89","messageId":"90","endLine":4,"endColumn":17},{"ruleId":"87","severity":1,"message":"97","line":6,"column":23,"nodeType":"89","messageId":"90","endLine":6,"endColumn":32},{"ruleId":"98","severity":1,"message":"99","line":26,"column":7,"nodeType":"100","endLine":26,"endColumn":17,"suggestions":"101"},{"ruleId":"98","severity":1,"message":"102","line":15,"column":7,"nodeType":"100","endLine":15,"endColumn":18,"suggestions":"103"},{"ruleId":"87","severity":1,"message":"104","line":1,"column":8,"nodeType":"89","messageId":"90","endLine":1,"endColumn":13},{"ruleId":"87","severity":1,"message":"105","line":8,"column":8,"nodeType":"89","messageId":"90","endLine":8,"endColumn":12},{"ruleId":"98","severity":1,"message":"106","line":30,"column":7,"nodeType":"100","endLine":30,"endColumn":17,"suggestions":"107"},{"ruleId":"98","severity":1,"message":"108","line":166,"column":7,"nodeType":"100","endLine":166,"endColumn":17,"suggestions":"109"},{"ruleId":"110","severity":1,"message":"111","line":296,"column":59,"nodeType":"112","messageId":"113","endLine":296,"endColumn":61},{"ruleId":"87","severity":1,"message":"114","line":1,"column":27,"nodeType":"89","messageId":"90","endLine":1,"endColumn":36},{"ruleId":"87","severity":1,"message":"115","line":39,"column":13,"nodeType":"89","messageId":"90","endLine":39,"endColumn":23},{"ruleId":"87","severity":1,"message":"116","line":1,"column":17,"nodeType":"89","messageId":"90","endLine":1,"endColumn":25},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'selectAvatar' is defined but never used.","Identifier","unusedVar","no-useless-computed-key","Unnecessarily computed property [\"category\"] found.","Property","unnecessarilyComputedProperty",{"range":"119","text":"120"},"'CheckIcon' is defined but never used.","'todayDate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filterItems'. Either include it or remove the dependency array. If 'filterItems' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["121"],"React Hook useEffect has missing dependencies: 'eventDates' and 'stringDate'. Either include them or remove the dependency array.",["122"],"'React' is defined but never used.","'Item' is defined but never used.","React Hook useEffect has missing dependencies: 'filterItems' and 'todayString'. Either include them or remove the dependency array. If 'filterItems' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["123"],"React Hook useEffect has a missing dependency: 'listCategories'. Either include it or remove the dependency array.",["124"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'useEffect' is defined but never used.","'resetEntry' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",[6963,6975],"\"category\"",{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},"Update the dependencies array to be: [allItems, filterItems]",{"range":"133","text":"134"},"Update the dependencies array to be: [eventDates, stringDate, todoDates]",{"range":"135","text":"136"},"Update the dependencies array to be: [allItems, filterItems, todayString]",{"range":"137","text":"138"},"Update the dependencies array to be: [allItems, listCategories]",{"range":"139","text":"140"},[821,831],"[allItems, filterItems]",[541,552],"[eventDates, stringDate, todoDates]",[866,876],"[allItems, filterItems, todayString]",[4833,4843],"[allItems, listCategories]"]