[{"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\index.js":"1","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\App.jsx":"2","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Dashboard.jsx":"3","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Item.jsx":"4","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Dropdown.jsx":"5","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\DatesBar.jsx":"6","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Day.jsx":"7","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\TestingFiles\\testData.jsx":"8","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Events.jsx":"9","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\TodaySummary.jsx":"10","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Collections.jsx":"11","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\List.jsx":"12","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Habit.jsx":"13","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\JournalEntry.jsx":"14","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Mood.jsx":"15","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Avatar.jsx":"16","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Animal.jsx":"17","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Header.jsx":"18","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Report.jsx":"19","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Tracker.jsx":"20","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\TrackerDots.jsx":"21"},{"size":157,"mtime":1610939225864,"results":"22","hashOfConfig":"23"},{"size":12541,"mtime":1611617144079,"results":"24","hashOfConfig":"23"},{"size":4840,"mtime":1611614537547,"results":"25","hashOfConfig":"23"},{"size":2054,"mtime":1611616971044,"results":"26","hashOfConfig":"23"},{"size":338,"mtime":1611335409575,"results":"27","hashOfConfig":"23"},{"size":1245,"mtime":1611589559530,"results":"28","hashOfConfig":"23"},{"size":1052,"mtime":1611107139800,"results":"29","hashOfConfig":"23"},{"size":718,"mtime":1611093558415,"results":"30","hashOfConfig":"23"},{"size":181,"mtime":1611095022766,"results":"31","hashOfConfig":"23"},{"size":10080,"mtime":1611505636077,"results":"32","hashOfConfig":"23"},{"size":8754,"mtime":1611614628529,"results":"33","hashOfConfig":"23"},{"size":1001,"mtime":1611616910827,"results":"34","hashOfConfig":"23"},{"size":1548,"mtime":1611514570752,"results":"35","hashOfConfig":"23"},{"size":5485,"mtime":1611516964766,"results":"36","hashOfConfig":"23"},{"size":848,"mtime":1611342560860,"results":"37","hashOfConfig":"23"},{"size":1326,"mtime":1611342333498,"results":"38","hashOfConfig":"23"},{"size":413,"mtime":1611346952706,"results":"39","hashOfConfig":"23"},{"size":2600,"mtime":1611615494736,"results":"40","hashOfConfig":"23"},{"size":8712,"mtime":1611617148137,"results":"41","hashOfConfig":"23"},{"size":702,"mtime":1611507607026,"results":"42","hashOfConfig":"23"},{"size":1110,"mtime":1611602583761,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"mrmoat",{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\index.js",[],["91","92"],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\App.jsx",["93","94"],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Dashboard.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Item.jsx",["95","96"],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Dropdown.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\DatesBar.jsx",["97","98"],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Day.jsx",["99"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Day.css\";\r\n\r\nfunction Day({ date, todoDates, eventDates }) {\r\n   const dayLetter = [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"];\r\n\r\n   const stringDate = date.toISOString().substring(0, 10);\r\n\r\n   const [hasTodo, setHasTodo] = useState(false);\r\n   const [hasEvent, setHasEvent] = useState(false);\r\n\r\n   useEffect(() => {\r\n      todoDates.includes(stringDate) ? setHasTodo(true) : setHasTodo(false);\r\n      eventDates.includes(stringDate) ? setHasEvent(true) : setHasEvent(false);\r\n   }, [todoDates]);\r\n\r\n   return (\r\n      <div className=\"day-container\">\r\n         <div>\r\n            <p>{dayLetter[date.getDay()]}</p>\r\n         </div>\r\n         <div>\r\n            <p>{date.getDate()}</p>\r\n         </div>\r\n\r\n         <div>\r\n            <div\r\n               className={\r\n                  \"indicator\" +\r\n                  (hasTodo ? \" todo\" : \"\") +\r\n                  (hasEvent ? \" event\" : \"\")\r\n               }\r\n            ></div>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Day;\r\n","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\TestingFiles\\testData.jsx",["100"],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Events.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\TodaySummary.jsx",["101","102"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./TodaySummary.css\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\r\n\r\nimport List from \"./List\";\r\nimport Item from \"./Item\";\r\nimport Habit from \"./Habit\";\r\n\r\nfunction TodaySummary({\r\n   // Variables\r\n   todayString,\r\n   allItems,\r\n   habits,\r\n   setHabits,\r\n   // Functions\r\n   filterItems,\r\n   removeItem,\r\n   editItem,\r\n}) {\r\n   const [todoItems, setTodoItems] = useState([]);\r\n   const [eventItems, setEventItems] = useState([]);\r\n   const [action, setAction] = useState(\"CheckOff\");\r\n\r\n   useEffect(() => {\r\n      let temp = filterItems(allItems, \"date\", todayString);\r\n      setTodoItems(filterItems(temp, \"type\", \"todo\"));\r\n      setEventItems(filterItems(temp, \"type\", \"event\"));\r\n   }, [allItems]);\r\n\r\n   // > ============ HANDLING HABITS ====================================\r\n\r\n   const [createHabit, setHabitDisplay] = useState(false);\r\n   const [habitInFocus, setHabitInFocus] = useState(\"\");\r\n   const [displayWarning, setDisplayWarning] = useState(false);\r\n\r\n   const [newHabit, setNewHabit] = useState({\r\n      id: habits.length,\r\n      habit: \"\",\r\n      abbr: \"\",\r\n      dates: [todayString],\r\n      completed: [false],\r\n   });\r\n\r\n   function changeDisplayWarning(event) {\r\n      setDisplayWarning(!displayWarning);\r\n      // if (action === \"Edit\") {\r\n      //    setDisplayWarning(!displayWarning);\r\n      // }\r\n\r\n      event.preventDefault();\r\n   }\r\n\r\n   function displayHabit(event) {\r\n      if (event.type === \"mouseenter\") {\r\n         setHabitInFocus(event.currentTarget.getAttribute(\"habit\"));\r\n      } else {\r\n         setHabitInFocus(\"\");\r\n      }\r\n   }\r\n\r\n   function enterEditMode() {\r\n      setAction(\"Edit\");\r\n   }\r\n\r\n   function editHabit(event) {\r\n      console.log(event.target);\r\n\r\n      try {\r\n         const habitID = event.target.getAttribute(\"value\");\r\n\r\n         if (action === \"CheckOff\") {\r\n            habits[habitID].dates = [\r\n               ...new Set([...habits[habitID].dates, todayString]),\r\n            ];\r\n            let indexToUpdate = habits[habitID].dates.findIndex(\r\n               (date) => date === todayString\r\n            );\r\n            habits[habitID].completed[indexToUpdate] =\r\n               \"true\" === event.target.getAttribute(\"status\");\r\n         } else {\r\n            changeCreateDisplay(event);\r\n\r\n            setNewHabit({\r\n               id: habits[habitID].id,\r\n               habit: habits[habitID].habit,\r\n               abbr: habits[habitID].abbr,\r\n               dates: habits[habitID].dates,\r\n               completed: habits[habitID].completed,\r\n            });\r\n         }\r\n      } catch (e) {\r\n         console.log(e);\r\n      }\r\n   }\r\n\r\n   function removeHabit(event) {\r\n      console.log(event.currentTarget);\r\n      console.log(newHabit.id);\r\n\r\n      setHabits((prevValue) => {\r\n         return prevValue.filter((habit) => {\r\n            return habit.id !== newHabit.id;\r\n         });\r\n      });\r\n\r\n      changeDisplayWarning(!displayWarning);\r\n      setHabitDisplay(!createHabit);\r\n      setAction(\"CheckOff\");\r\n      event.preventDefault();\r\n   }\r\n\r\n   function addHabit(event) {\r\n      console.log(habits);\r\n\r\n      if (newHabit.habit.trim() === \"\") {\r\n         document.querySelector(\".input-habit\").classList.add(\"empty-input\");\r\n      } else if (newHabit.abbr === \"\") {\r\n         document.querySelector(\".input-habit\").classList.remove(\"empty-input\");\r\n         document.querySelector(\".input-abbr\").classList.add(\"empty-input\");\r\n      } else {\r\n         document.querySelector(\".input-habit\").classList.remove(\"empty-input\");\r\n         document.querySelector(\".input-abbr\").classList.remove(\"empty-input\");\r\n\r\n         setHabits((prevHabits) => {\r\n            if (action === \"Add\") {\r\n               return [...prevHabits, newHabit];\r\n            } else {\r\n               let temp = [...prevHabits];\r\n               temp[newHabit.id] = newHabit;\r\n               return [...temp];\r\n            }\r\n         });\r\n\r\n         setHabitDisplay(false);\r\n         setAction(\"CheckOff\");\r\n         setNewHabit((prevValue) => ({\r\n            id: prevValue.id + 1,\r\n            habit: \"\",\r\n            abbr: \"\",\r\n            dates: [todayString],\r\n            completed: [false],\r\n         }));\r\n      }\r\n\r\n      event.preventDefault();\r\n   }\r\n\r\n   function updateHabit(event) {\r\n      const { name, value } = event.target;\r\n      setNewHabit((prevValue) => {\r\n         return {\r\n            ...prevValue,\r\n            [name]: value,\r\n         };\r\n      });\r\n\r\n      event.stopPropagation();\r\n   }\r\n\r\n   function changeCreateDisplay(event) {\r\n      console.log(event.target);\r\n      setAction(event.currentTarget.getAttribute(\"name\"));\r\n\r\n      if (event.target.getAttribute(\"name\") === \"close-btn\") {\r\n         setHabitDisplay(!createHabit);\r\n         setAction(\"CheckOff\");\r\n      } else if (!createHabit || action !== \"Edit\") {\r\n         setHabitDisplay(!createHabit);\r\n      }\r\n\r\n      setNewHabit({\r\n         id: habits.length,\r\n         habit: \"\",\r\n         abbr: \"\",\r\n         dates: [todayString],\r\n         completed: [false],\r\n      });\r\n   }\r\n\r\n   return (\r\n      <div id=\"today-container\">\r\n         <div id=\"habits-container\">\r\n            <div className=\"habit-header\">\r\n               <div className=\"indicator\"></div>\r\n               <h4>{(action === \"Edit\" ? \"Edit \" : \"\") + \"Habits\"}</h4>\r\n               <div>\r\n                  <AddIcon\r\n                     onClick={changeCreateDisplay}\r\n                     className=\"btn-icon habits-icon\"\r\n                     name=\"Add\"\r\n                  />\r\n                  <EditIcon\r\n                     onClick={enterEditMode}\r\n                     className=\"btn-icon habits-icon\"\r\n                     name=\"Edit\"\r\n                  />\r\n               </div>\r\n            </div>\r\n\r\n            <div className=\"habit-indicators\">\r\n               {habits.map((habit, index) => {\r\n                  return (\r\n                     <Habit\r\n                        key={index}\r\n                        todayString={todayString}\r\n                        habit={habit}\r\n                        displayHabit={displayHabit}\r\n                        habitInFocus={habitInFocus}\r\n                        updateHabit={updateHabit}\r\n                        editHabit={editHabit}\r\n                        action={action}\r\n                     />\r\n                  );\r\n               })}\r\n            </div>\r\n            <div className={\"habit-text\"}>{habitInFocus}</div>\r\n         </div>\r\n         <div\r\n            className=\"create-item\"\r\n            style={\r\n               createHabit\r\n                  ? {\r\n                       top: `${\r\n                          document.querySelector(\"#habits-container\")\r\n                             .clientHeight\r\n                       }px`,\r\n                    }\r\n                  : {}\r\n            }\r\n         >\r\n            <ExpandLessIcon\r\n               onClick={changeCreateDisplay}\r\n               className=\"btn-icon create-close-btn\"\r\n               name=\"close-btn\"\r\n            />\r\n            <form>\r\n               <input\r\n                  className=\"input-habit\"\r\n                  onChange={updateHabit}\r\n                  name=\"habit\"\r\n                  value={newHabit.habit}\r\n                  placeholder=\"New Habit\"\r\n                  minLength=\"1\"\r\n               ></input>\r\n               <input\r\n                  className=\"input-abbr\"\r\n                  onChange={updateHabit}\r\n                  name=\"abbr\"\r\n                  minLength=\"1\"\r\n                  maxLength=\"2\"\r\n                  value={newHabit.abbr}\r\n                  placeholder=\"Abbreviation (max 2 char.)\"\r\n               ></input>\r\n               <div\r\n                  className={\r\n                     action !== \"Add\" ? \"btn-container half\" : \"btn-container\"\r\n                  }\r\n               >\r\n                  <button onClick={addHabit} className=\"create-btn\">\r\n                     {action}\r\n                  </button>\r\n                  <button\r\n                     onClick={changeDisplayWarning}\r\n                     className={\r\n                        \"create-btn \" + (action !== \"Add\" ? \"\" : \" no-display\")\r\n                     }\r\n                  >\r\n                     Delete\r\n                  </button>\r\n                  <div\r\n                     className={\r\n                        displayWarning ? \"delete-warning\" : \"no-display\"\r\n                     }\r\n                  >\r\n                     <p>\r\n                        All records of this habit will be removed. Please\r\n                        confirm you want to proceed.\r\n                     </p>\r\n                     <div className=\"btn-container half\">\r\n                        <button onClick={removeHabit} className={\"create-btn \"}>\r\n                           Confirm\r\n                        </button>\r\n                        <button\r\n                           onClick={changeDisplayWarning}\r\n                           className={\"create-btn \"}\r\n                        >\r\n                           Nevermind\r\n                        </button>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </form>\r\n         </div>\r\n         <div className=\"today-lists\">\r\n            <div>\r\n               <div className=\"indicator event\"></div>\r\n               <List\r\n                  key=\"todayEvent\"\r\n                  listTitle=\"Event\"\r\n                  items={eventItems}\r\n                  removeItem={removeItem}\r\n                  editItem={editItem}\r\n               />\r\n            </div>\r\n            <div>\r\n               <div className=\"indicator todo\"></div>\r\n               <List\r\n                  key=\"todayTodo\"\r\n                  listTitle=\"To Do\"\r\n                  items={todoItems}\r\n                  removeItem={removeItem}\r\n                  editItem={editItem}\r\n               />\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default TodaySummary;\r\n","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Collections.jsx",["103"],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\List.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Habit.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\JournalEntry.jsx",["104","105"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./JournalEntry.css\";\r\n\r\nimport Mood from \"./Mood\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\n\r\nfunction JournalEntry({\r\n   // entryId,\r\n   todayFormatted,\r\n   todayString,\r\n   todayEntry,\r\n   setEntries,\r\n   allMoods,\r\n   // chosenMood,\r\n   allAnimals,\r\n   avatar,\r\n}) {\r\n   const [showMoodChoices, setShowMoodChoices] = useState(false);\r\n   const [moodInFocus, setMoodFocus] = useState(\"\");\r\n   const [currentEntry, setCurrentEntry] = useState({\r\n      id: todayEntry.id,\r\n      title: todayEntry.title,\r\n      date: todayEntry.date,\r\n      content: todayEntry.content,\r\n      mood: todayEntry.mood,\r\n      reason: todayEntry.reason,\r\n   });\r\n\r\n   function changeMoodFocus(event) {\r\n      if (event.type === \"mouseenter\") {\r\n         setMoodFocus(event.target.getAttribute(\"value\"));\r\n      } else {\r\n         setMoodFocus(\"\");\r\n      }\r\n   }\r\n\r\n   function submitEntry(event) {\r\n      setEntries((prevValue) => {\r\n         console.log(prevValue);\r\n         return [...prevValue.slice(0, todayEntry.id), currentEntry];\r\n      });\r\n\r\n      event.preventDefault();\r\n   }\r\n\r\n   function revealChoices() {\r\n      setShowMoodChoices(!showMoodChoices);\r\n   }\r\n\r\n   function updateEntry(event) {\r\n      const action = event.currentTarget.getAttribute(\"action\");\r\n\r\n      if (action !== \"text update\") {\r\n         revealChoices();\r\n\r\n         const name = event.currentTarget.getAttribute(\"name\");\r\n         const value = event.currentTarget.getAttribute(\"value\");\r\n         setCurrentEntry((prevValue) => {\r\n            return {\r\n               ...prevValue,\r\n               [name]: value,\r\n            };\r\n         });\r\n      } else {\r\n         const { name, value } = event.target;\r\n\r\n         console.log(name);\r\n         console.log(value);\r\n         setCurrentEntry((prevValue) => {\r\n            return {\r\n               ...prevValue,\r\n               [name]: value,\r\n            };\r\n         });\r\n      }\r\n\r\n      event.stopPropagation();\r\n   }\r\n\r\n   return (\r\n      <div className=\"journal-entry\">\r\n         <form>\r\n            <div className=\"entry-header\">\r\n               <h2>\r\n                  <input\r\n                     className=\"entry-title\"\r\n                     onChange={updateEntry}\r\n                     name=\"title\"\r\n                     value={currentEntry.title}\r\n                     placeholder=\"Title\"\r\n                     action=\"text update\"\r\n                  ></input>\r\n               </h2>\r\n               <SaveIcon onClick={submitEntry} className=\"btn-icon\" />\r\n            </div>\r\n\r\n            <h4 className=\"long-date\">{todayFormatted}</h4>\r\n            <div className=\"text-container\">\r\n               <textarea\r\n                  className=\"input-entry\"\r\n                  name=\"content\"\r\n                  onChange={updateEntry}\r\n                  value={currentEntry.content}\r\n                  rows=\"10\"\r\n                  placeholder=\"Today...\"\r\n                  action=\"text update\"\r\n               ></textarea>\r\n            </div>\r\n            <div id=\"mood-container\" className=\"input-entry\">\r\n               <p>{moodInFocus}</p>\r\n               <div className=\"mood-tracker scrollbar\">\r\n                  <div className=\"mood-indicators\">\r\n                     {allMoods.map((mood, index) => {\r\n                        return (\r\n                           <Mood\r\n                              key={index}\r\n                              mood={mood}\r\n                              avatar={avatar}\r\n                              changeMoodFocus={changeMoodFocus}\r\n                              chosenMood={currentEntry.mood}\r\n                              updateEntry={updateEntry}\r\n                              action=\"select mood\"\r\n                              revealChoices={revealChoices}\r\n                           />\r\n                        );\r\n                     })}\r\n                  </div>\r\n                  <div\r\n                     className={\r\n                        \"mood-title\" + (showMoodChoices ? \" reveal\" : \"\")\r\n                     }\r\n                  >\r\n                     <Mood\r\n                        key=\"currentMood\"\r\n                        mood={currentEntry.mood}\r\n                        avatar={avatar}\r\n                        changeMoodFocus={changeMoodFocus}\r\n                        chosenMood={currentEntry.mood}\r\n                        updateEntry={updateEntry}\r\n                        action=\"reveal choices\"\r\n                        revealChoices={revealChoices}\r\n                     />\r\n                     <div className=\"mood-text\">\r\n                        <h3>Mood Tracker</h3>\r\n                        <div>\r\n                           {/* <ArrowBackIcon className=\"btn-icon\" /> */}\r\n                           <p>Pick a mood</p>\r\n                        </div>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n               {/* <div className=\"mood-description\"> */}\r\n               <textarea\r\n                  className=\"input-entry entry-reason\"\r\n                  onChange={updateEntry}\r\n                  name=\"reason\"\r\n                  value={currentEntry.reason}\r\n                  placeholder=\"Why do you feel this way?\"\r\n                  action=\"text update\"\r\n               ></textarea>\r\n               {/* </div> */}\r\n            </div>\r\n         </form>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default JournalEntry;\r\n","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Mood.jsx",["106"],"import React, { useState } from \"react\";\r\nimport \"./Mood.css\";\r\n\r\nimport { ReactComponent as MoodSelector } from \"./images/expressions.svg\";\r\n\r\nfunction Mood({\r\n   mood,\r\n   avatar,\r\n   changeMoodFocus,\r\n   chosenMood,\r\n   updateEntry,\r\n   action,\r\n   revealChoices,\r\n}) {\r\n   return (\r\n      <div\r\n         onClick={action === \"select mood\" ? updateEntry : revealChoices}\r\n         onMouseEnter={changeMoodFocus}\r\n         onMouseLeave={changeMoodFocus}\r\n         className={\r\n            `mood-box ${mood} ${avatar}` +\r\n            (chosenMood === mood ? \" in-front\" : \"\")\r\n         }\r\n         name=\"mood\"\r\n         value={mood}\r\n         action={action}\r\n      >\r\n         <MoodSelector\r\n            className=\"svg-expression\"\r\n            value={mood}\r\n            avatar={avatar}\r\n         />\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Mood;\r\n","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Avatar.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Animal.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Header.jsx",["107"],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Report.jsx",["108","109","110","111","112"],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Tracker.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\TrackerDots.jsx",["113","114"],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":131,"column":7,"nodeType":"121","endLine":131,"endColumn":9,"suggestions":"122"},{"ruleId":"123","severity":1,"message":"124","line":259,"column":16,"nodeType":"125","messageId":"126","endLine":259,"endColumn":36,"fix":"127"},{"ruleId":"128","severity":1,"message":"129","line":1,"column":17,"nodeType":"130","messageId":"131","endLine":1,"endColumn":25},{"ruleId":"128","severity":1,"message":"132","line":4,"column":8,"nodeType":"130","messageId":"131","endLine":4,"endColumn":17},{"ruleId":"128","severity":1,"message":"133","line":6,"column":23,"nodeType":"130","messageId":"131","endLine":6,"endColumn":32},{"ruleId":"119","severity":1,"message":"134","line":26,"column":7,"nodeType":"121","endLine":26,"endColumn":17,"suggestions":"135"},{"ruleId":"119","severity":1,"message":"136","line":15,"column":7,"nodeType":"121","endLine":15,"endColumn":18,"suggestions":"137"},{"ruleId":"128","severity":1,"message":"138","line":1,"column":8,"nodeType":"130","messageId":"131","endLine":1,"endColumn":13},{"ruleId":"128","severity":1,"message":"139","line":8,"column":8,"nodeType":"130","messageId":"131","endLine":8,"endColumn":12},{"ruleId":"119","severity":1,"message":"140","line":30,"column":7,"nodeType":"121","endLine":30,"endColumn":17,"suggestions":"141"},{"ruleId":"119","severity":1,"message":"142","line":69,"column":7,"nodeType":"121","endLine":69,"endColumn":17,"suggestions":"143"},{"ruleId":"128","severity":1,"message":"144","line":1,"column":27,"nodeType":"130","messageId":"131","endLine":1,"endColumn":36},{"ruleId":"128","severity":1,"message":"145","line":6,"column":8,"nodeType":"130","messageId":"131","endLine":6,"endColumn":21},{"ruleId":"128","severity":1,"message":"129","line":1,"column":17,"nodeType":"130","messageId":"131","endLine":1,"endColumn":25},{"ruleId":"146","severity":1,"message":"147","line":79,"column":1,"nodeType":"148","messageId":"149","endLine":91,"endColumn":2},{"ruleId":"128","severity":1,"message":"150","line":5,"column":8,"nodeType":"130","messageId":"131","endLine":5,"endColumn":12},{"ruleId":"128","severity":1,"message":"151","line":9,"column":8,"nodeType":"130","messageId":"131","endLine":9,"endColumn":20},{"ruleId":"152","severity":1,"message":"153","line":36,"column":55,"nodeType":"154","messageId":"155","endLine":36,"endColumn":57},{"ruleId":"119","severity":1,"message":"156","line":48,"column":7,"nodeType":"121","endLine":48,"endColumn":34,"suggestions":"157"},{"ruleId":"158","severity":1,"message":"159","line":51,"column":24,"nodeType":"160","messageId":"161","endLine":51,"endColumn":35},{"ruleId":"128","severity":1,"message":"129","line":1,"column":17,"nodeType":"130","messageId":"131","endLine":1,"endColumn":25},{"ruleId":"128","severity":1,"message":"144","line":1,"column":27,"nodeType":"130","messageId":"131","endLine":1,"endColumn":36},"no-native-reassign",["162"],"no-negated-in-lhs",["163"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'todayString'. Either include it or remove the dependency array.","ArrayExpression",["164"],"no-useless-computed-key","Unnecessarily computed property [\"category\"] found.","Property","unnecessarilyComputedProperty",{"range":"165","text":"166"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'CheckIcon' is defined but never used.","'todayDate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'filterItems'. Either include it or remove the dependency array. If 'filterItems' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["167"],"React Hook useEffect has missing dependencies: 'eventDates' and 'stringDate'. Either include them or remove the dependency array.",["168"],"'React' is defined but never used.","'Item' is defined but never used.","React Hook useEffect has missing dependencies: 'filterItems' and 'todayString'. Either include them or remove the dependency array. If 'filterItems' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["169"],"React Hook useEffect has missing dependencies: 'listGrouping' and 'listGroups.propertyName'. Either include them or remove the dependency array. If 'listGrouping' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["170"],"'useEffect' is defined but never used.","'ArrowBackIcon' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'Mood' is defined but never used.","'JournalEntry' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'today' and 'todayString'. Either include them or remove the dependency array. If 'setTrackerDates' needs the current value of 'today', you can also switch to useReducer instead of useState and read 'today' in the reducer.",["171"],"no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","no-global-assign","no-unsafe-negation",{"desc":"172","fix":"173"},[9331,9343],"\"category\"",{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},"Update the dependencies array to be: [todayString]",{"range":"184","text":"185"},"Update the dependencies array to be: [allItems, filterItems]",{"range":"186","text":"187"},"Update the dependencies array to be: [eventDates, stringDate, todoDates]",{"range":"188","text":"189"},"Update the dependencies array to be: [allItems, filterItems, todayString]",{"range":"190","text":"191"},"Update the dependencies array to be: [allItems, listGrouping, listGroups.propertyName]",{"range":"192","text":"193"},"Update the dependencies array to be: [allItems, entries, habits, today, todayString]",{"range":"194","text":"195"},[5454,5456],"[todayString]",[821,831],"[allItems, filterItems]",[541,552],"[eventDates, stringDate, todoDates]",[866,876],"[allItems, filterItems, todayString]",[1983,1993],"[allItems, listGrouping, listGroups.propertyName]",[1599,1626],"[allItems, entries, habits, today, todayString]"]