[{"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\index.js":"1","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Dashboard.jsx":"2","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Header.jsx":"3","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\summary\\DatesBar\\DatesBar.jsx":"4","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\summary\\DatesBar\\Day.jsx":"5","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\summary\\TodaySummary\\TodaySummary.jsx":"6","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\summary\\TodaySummary\\Habit.jsx":"7","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\collections\\Collections.jsx":"8","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\journal\\JournalEntry.jsx":"9","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\journal\\Mood.jsx":"10","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\general\\List.jsx":"11","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\general\\Item.jsx":"12","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\general\\Dropdown.jsx":"13","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\App.jsx":"14","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\avatar\\Avatar.jsx":"15","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\log\\Report.jsx":"16","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\log\\Tracker.jsx":"17","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\avatar\\Animal.jsx":"18","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\log\\TrackerDots.jsx":"19","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\react-frontend-journal\\src\\index.js":"20","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\react-frontend-journal\\src\\App.jsx":"21","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\react-frontend-journal\\src\\testData.js":"22","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\react-frontend-journal\\src\\components\\Header.jsx":"23","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\react-frontend-journal\\src\\components\\Dashboard.jsx":"24","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\react-frontend-journal\\src\\components\\avatar\\Avatar.jsx":"25","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\react-frontend-journal\\src\\components\\log\\Report.jsx":"26","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\react-frontend-journal\\src\\components\\avatar\\Animal.jsx":"27","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\react-frontend-journal\\src\\components\\log\\Tracker.jsx":"28","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\react-frontend-journal\\src\\components\\collections\\Collections.jsx":"29","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\react-frontend-journal\\src\\components\\journal\\JournalEntry.jsx":"30","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\react-frontend-journal\\src\\components\\summary\\DatesBar\\DatesBar.jsx":"31","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\react-frontend-journal\\src\\components\\summary\\TodaySummary\\TodaySummary.jsx":"32","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\react-frontend-journal\\src\\components\\log\\TrackerDots.jsx":"33","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\react-frontend-journal\\src\\components\\journal\\Mood.jsx":"34","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\react-frontend-journal\\src\\components\\summary\\DatesBar\\Day.jsx":"35","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\react-frontend-journal\\src\\components\\summary\\TodaySummary\\Habit.jsx":"36","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\react-frontend-journal\\src\\components\\global\\List.jsx":"37","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\react-frontend-journal\\src\\components\\global\\Dropdown.jsx":"38","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\react-frontend-journal\\src\\components\\global\\Item.jsx":"39"},{"size":146,"mtime":1611676375347,"results":"40","hashOfConfig":"41"},{"size":4861,"mtime":1611677361122,"results":"42","hashOfConfig":"41"},{"size":2287,"mtime":1611676935708,"results":"43","hashOfConfig":"41"},{"size":1212,"mtime":1611693266407,"results":"44","hashOfConfig":"41"},{"size":1052,"mtime":1611675488145,"results":"45","hashOfConfig":"41"},{"size":9976,"mtime":1611677093130,"results":"46","hashOfConfig":"41"},{"size":1303,"mtime":1611697850557,"results":"47","hashOfConfig":"41"},{"size":7991,"mtime":1611698916226,"results":"48","hashOfConfig":"41"},{"size":5259,"mtime":1611697570729,"results":"49","hashOfConfig":"41"},{"size":866,"mtime":1611676803827,"results":"50","hashOfConfig":"41"},{"size":955,"mtime":1611697692300,"results":"51","hashOfConfig":"41"},{"size":1989,"mtime":1611676476896,"results":"52","hashOfConfig":"41"},{"size":338,"mtime":1611676068772,"results":"53","hashOfConfig":"41"},{"size":12639,"mtime":1611698476914,"results":"54","hashOfConfig":"41"},{"size":1329,"mtime":1611676973656,"results":"55","hashOfConfig":"41"},{"size":8705,"mtime":1611698874050,"results":"56","hashOfConfig":"41"},{"size":704,"mtime":1611698192086,"results":"57","hashOfConfig":"41"},{"size":414,"mtime":1611698249604,"results":"58","hashOfConfig":"41"},{"size":1085,"mtime":1611697616054,"results":"59","hashOfConfig":"41"},{"size":151,"mtime":1614270511517,"results":"60","hashOfConfig":"61"},{"size":7976,"mtime":1614272460916,"results":"62","hashOfConfig":"61"},{"size":3991,"mtime":1614273318815,"results":"63","hashOfConfig":"61"},{"size":2196,"mtime":1614271964252,"results":"64","hashOfConfig":"61"},{"size":4866,"mtime":1614270511484,"results":"65","hashOfConfig":"61"},{"size":1329,"mtime":1614270511486,"results":"66","hashOfConfig":"61"},{"size":8620,"mtime":1614272014538,"results":"67","hashOfConfig":"61"},{"size":414,"mtime":1614270511485,"results":"68","hashOfConfig":"61"},{"size":704,"mtime":1614270511513,"results":"69","hashOfConfig":"61"},{"size":7989,"mtime":1614271884441,"results":"70","hashOfConfig":"61"},{"size":5159,"mtime":1614270511510,"results":"71","hashOfConfig":"61"},{"size":1212,"mtime":1614270511514,"results":"72","hashOfConfig":"61"},{"size":9794,"mtime":1614271932596,"results":"73","hashOfConfig":"61"},{"size":1085,"mtime":1614270511513,"results":"74","hashOfConfig":"61"},{"size":866,"mtime":1614270511511,"results":"75","hashOfConfig":"61"},{"size":1052,"mtime":1614270511515,"results":"76","hashOfConfig":"61"},{"size":1228,"mtime":1614270511516,"results":"77","hashOfConfig":"61"},{"size":955,"mtime":1614274833488,"results":"78","hashOfConfig":"61"},{"size":338,"mtime":1614270511488,"results":"79","hashOfConfig":"61"},{"size":1989,"mtime":1614270511489,"results":"80","hashOfConfig":"61"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},"mrmoat",{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"83"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"83"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"1rys08y",{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"127","usedDeprecatedRules":"124"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"124"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"124"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"124"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"124"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\index.js",[],["167","168"],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Dashboard.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Header.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\summary\\DatesBar\\DatesBar.jsx",["169","170"],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\summary\\DatesBar\\Day.jsx",["171"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Day.css\";\r\n\r\nfunction Day({ date, todoDates, eventDates }) {\r\n   const dayLetter = [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"];\r\n\r\n   const stringDate = date.toISOString().substring(0, 10);\r\n\r\n   const [hasTodo, setHasTodo] = useState(false);\r\n   const [hasEvent, setHasEvent] = useState(false);\r\n\r\n   useEffect(() => {\r\n      todoDates.includes(stringDate) ? setHasTodo(true) : setHasTodo(false);\r\n      eventDates.includes(stringDate) ? setHasEvent(true) : setHasEvent(false);\r\n   }, [todoDates]);\r\n\r\n   return (\r\n      <div className=\"day-container\">\r\n         <div>\r\n            <p>{dayLetter[date.getDay()]}</p>\r\n         </div>\r\n         <div>\r\n            <p>{date.getDate()}</p>\r\n         </div>\r\n\r\n         <div>\r\n            <div\r\n               className={\r\n                  \"indicator\" +\r\n                  (hasTodo ? \" todo\" : \"\") +\r\n                  (hasEvent ? \" event\" : \"\")\r\n               }\r\n            ></div>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Day;\r\n","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\summary\\TodaySummary\\TodaySummary.jsx",["172"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./TodaySummary.css\";\r\n\r\nimport List from \"../../general/List\";\r\nimport Habit from \"./Habit\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\r\n\r\nfunction TodaySummary({\r\n   // Variables\r\n   todayString,\r\n   allItems,\r\n   habits,\r\n   setHabits,\r\n   // Functions\r\n   filterItems,\r\n   removeItem,\r\n   editItem,\r\n}) {\r\n   const [todoItems, setTodoItems] = useState([]);\r\n   const [eventItems, setEventItems] = useState([]);\r\n   const [action, setAction] = useState(\"CheckOff\");\r\n\r\n   useEffect(() => {\r\n      let temp = filterItems(allItems, \"date\", todayString);\r\n      setTodoItems(filterItems(temp, \"type\", \"todo\"));\r\n      setEventItems(filterItems(temp, \"type\", \"event\"));\r\n   }, [allItems]);\r\n\r\n   // > ============ HANDLING HABITS ====================================\r\n\r\n   const [createHabit, setHabitDisplay] = useState(false);\r\n   const [habitInFocus, setHabitInFocus] = useState(\"\");\r\n   const [displayWarning, setDisplayWarning] = useState(false);\r\n\r\n   const [newHabit, setNewHabit] = useState({\r\n      id: habits.length,\r\n      habit: \"\",\r\n      abbr: \"\",\r\n      dates: [todayString],\r\n      completed: [false],\r\n   });\r\n\r\n   function changeDisplayWarning(event) {\r\n      setDisplayWarning(!displayWarning);\r\n      event.preventDefault();\r\n   }\r\n\r\n   function displayHabit(event) {\r\n      if (event.type === \"mouseenter\") {\r\n         setHabitInFocus(event.currentTarget.getAttribute(\"habit\"));\r\n      } else {\r\n         setHabitInFocus(\"\");\r\n      }\r\n   }\r\n\r\n   function enterEditMode() {\r\n      setAction(\"Edit\");\r\n   }\r\n\r\n   function editHabit(event) {\r\n      console.log(event.target);\r\n\r\n      try {\r\n         const habitID = event.target.getAttribute(\"value\");\r\n\r\n         if (action === \"CheckOff\") {\r\n            habits[habitID].dates = [\r\n               ...new Set([...habits[habitID].dates, todayString]),\r\n            ];\r\n            let indexToUpdate = habits[habitID].dates.findIndex(\r\n               (date) => date === todayString\r\n            );\r\n            habits[habitID].completed[indexToUpdate] =\r\n               \"true\" === event.target.getAttribute(\"status\");\r\n         } else {\r\n            changeCreateDisplay(event);\r\n\r\n            setNewHabit({\r\n               id: habits[habitID].id,\r\n               habit: habits[habitID].habit,\r\n               abbr: habits[habitID].abbr,\r\n               dates: habits[habitID].dates,\r\n               completed: habits[habitID].completed,\r\n            });\r\n         }\r\n      } catch (error) {\r\n         console.log(error);\r\n      }\r\n   }\r\n\r\n   function removeHabit(event) {\r\n      console.log(event.currentTarget);\r\n      console.log(newHabit.id);\r\n\r\n      setHabits((prevValue) => {\r\n         return prevValue.filter((habit) => {\r\n            return habit.id !== newHabit.id;\r\n         });\r\n      });\r\n\r\n      changeDisplayWarning(!displayWarning);\r\n      setHabitDisplay(!createHabit);\r\n      setAction(\"CheckOff\");\r\n      event.preventDefault();\r\n   }\r\n\r\n   function addHabit(event) {\r\n      console.log(habits);\r\n\r\n      if (newHabit.habit.trim() === \"\") {\r\n         document.querySelector(\".input-habit\").classList.add(\"empty-input\");\r\n      } else if (newHabit.abbr === \"\") {\r\n         document.querySelector(\".input-habit\").classList.remove(\"empty-input\");\r\n         document.querySelector(\".input-abbr\").classList.add(\"empty-input\");\r\n      } else {\r\n         document.querySelector(\".input-habit\").classList.remove(\"empty-input\");\r\n         document.querySelector(\".input-abbr\").classList.remove(\"empty-input\");\r\n\r\n         setHabits((prevHabits) => {\r\n            if (action === \"Add\") {\r\n               return [...prevHabits, newHabit];\r\n            } else {\r\n               let temp = [...prevHabits];\r\n               temp[newHabit.id] = newHabit;\r\n               return [...temp];\r\n            }\r\n         });\r\n\r\n         setHabitDisplay(false);\r\n         setAction(\"CheckOff\");\r\n         setNewHabit((prevValue) => ({\r\n            id: prevValue.id + 1,\r\n            habit: \"\",\r\n            abbr: \"\",\r\n            dates: [todayString],\r\n            completed: [false],\r\n         }));\r\n      }\r\n\r\n      event.preventDefault();\r\n   }\r\n\r\n   function updateHabit(event) {\r\n      const { name, value } = event.target;\r\n      setNewHabit((prevValue) => {\r\n         return {\r\n            ...prevValue,\r\n            [name]: value,\r\n         };\r\n      });\r\n\r\n      event.stopPropagation();\r\n   }\r\n\r\n   function changeCreateDisplay(event) {\r\n      console.log(event.target);\r\n      setAction(event.currentTarget.getAttribute(\"name\"));\r\n\r\n      if (event.target.getAttribute(\"name\") === \"close-btn\") {\r\n         setHabitDisplay(!createHabit);\r\n         setAction(\"CheckOff\");\r\n      } else if (!createHabit || action !== \"Edit\") {\r\n         setHabitDisplay(!createHabit);\r\n      }\r\n\r\n      setNewHabit({\r\n         id: habits.length,\r\n         habit: \"\",\r\n         abbr: \"\",\r\n         dates: [todayString],\r\n         completed: [false],\r\n      });\r\n   }\r\n\r\n   return (\r\n      <div id=\"today-container\">\r\n         <div id=\"habits-container\">\r\n            <div className=\"habit-header\">\r\n               <div className=\"indicator\"></div>\r\n               <h4>{(action === \"Edit\" ? \"Edit \" : \"\") + \"Habits\"}</h4>\r\n               <div>\r\n                  <AddIcon\r\n                     onClick={changeCreateDisplay}\r\n                     className=\"btn-icon habits-icon\"\r\n                     name=\"Add\"\r\n                  />\r\n                  <EditIcon\r\n                     onClick={enterEditMode}\r\n                     className=\"btn-icon habits-icon\"\r\n                     name=\"Edit\"\r\n                  />\r\n               </div>\r\n            </div>\r\n\r\n            <div className=\"habit-indicators\">\r\n               {habits.map((habit, index) => {\r\n                  return (\r\n                     <Habit\r\n                        key={index}\r\n                        todayString={todayString}\r\n                        habit={habit}\r\n                        displayHabit={displayHabit}\r\n                        habitInFocus={habitInFocus}\r\n                        updateHabit={updateHabit}\r\n                        editHabit={editHabit}\r\n                        action={action}\r\n                     />\r\n                  );\r\n               })}\r\n            </div>\r\n            <div className={\"habit-text\"}>{habitInFocus}</div>\r\n         </div>\r\n         <div\r\n            className=\"create-item\"\r\n            style={\r\n               createHabit\r\n                  ? {\r\n                       top: `${\r\n                          document.querySelector(\"#habits-container\")\r\n                             .clientHeight\r\n                       }px`,\r\n                    }\r\n                  : {}\r\n            }\r\n         >\r\n            <ExpandLessIcon\r\n               onClick={changeCreateDisplay}\r\n               className=\"btn-icon create-close-btn\"\r\n               name=\"close-btn\"\r\n            />\r\n            <form>\r\n               <input\r\n                  className=\"input-habit\"\r\n                  onChange={updateHabit}\r\n                  name=\"habit\"\r\n                  value={newHabit.habit}\r\n                  placeholder=\"New Habit\"\r\n                  minLength=\"1\"\r\n               ></input>\r\n               <input\r\n                  className=\"input-abbr\"\r\n                  onChange={updateHabit}\r\n                  name=\"abbr\"\r\n                  minLength=\"1\"\r\n                  maxLength=\"2\"\r\n                  value={newHabit.abbr}\r\n                  placeholder=\"Abbreviation (max 2 char.)\"\r\n               ></input>\r\n               <div\r\n                  className={\r\n                     action !== \"Add\" ? \"btn-container half\" : \"btn-container\"\r\n                  }\r\n               >\r\n                  <button onClick={addHabit} className=\"create-btn\">\r\n                     {action}\r\n                  </button>\r\n                  <button\r\n                     onClick={changeDisplayWarning}\r\n                     className={\r\n                        \"create-btn \" + (action !== \"Add\" ? \"\" : \" no-display\")\r\n                     }\r\n                  >\r\n                     Delete\r\n                  </button>\r\n                  <div\r\n                     className={\r\n                        displayWarning ? \"delete-warning\" : \"no-display\"\r\n                     }\r\n                  >\r\n                     <p>\r\n                        All records of this habit will be removed. Please\r\n                        confirm you want to proceed.\r\n                     </p>\r\n                     <div className=\"btn-container half\">\r\n                        <button onClick={removeHabit} className={\"create-btn \"}>\r\n                           Confirm\r\n                        </button>\r\n                        <button\r\n                           onClick={changeDisplayWarning}\r\n                           className={\"create-btn \"}\r\n                        >\r\n                           Nevermind\r\n                        </button>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </form>\r\n         </div>\r\n         <div className=\"today-lists\">\r\n            <div>\r\n               <div className=\"indicator event\"></div>\r\n               <List\r\n                  key=\"todayEvent\"\r\n                  listTitle=\"Event\"\r\n                  items={eventItems}\r\n                  removeItem={removeItem}\r\n                  editItem={editItem}\r\n               />\r\n            </div>\r\n            <div>\r\n               <div className=\"indicator todo\"></div>\r\n               <List\r\n                  key=\"todayTodo\"\r\n                  listTitle=\"To Do\"\r\n                  items={todoItems}\r\n                  removeItem={removeItem}\r\n                  editItem={editItem}\r\n               />\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default TodaySummary;\r\n","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\summary\\TodaySummary\\Habit.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\collections\\Collections.jsx",["173"],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\journal\\JournalEntry.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\journal\\Mood.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\general\\List.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\general\\Item.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\general\\Dropdown.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\App.jsx",["174"],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\avatar\\Avatar.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\log\\Report.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\log\\Tracker.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\avatar\\Animal.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\log\\TrackerDots.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\react-frontend-journal\\src\\index.js",[],["175","176"],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\react-frontend-journal\\src\\App.jsx",["177"],"import React, { useState, useEffect } from \"react\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport Avatar from \"./components/avatar/Avatar\";\r\nimport Header from \"./components/Header\";\r\nimport Report from \"./components/log/Report\";\r\nimport testData from \"./testData\";\r\n\r\nfunction App() {\r\n   const today = new Date(new Date().setHours(0, 0, 0, 0));\r\n   const todayString = today.toISOString().substring(0, 10);\r\n   const allMoods = [\r\n      \"neutral\",\r\n      \"happy\",\r\n      \"excited\",\r\n      \"mischievous\",\r\n      \"meh\",\r\n      \"unimpressed\",\r\n      \"angry\",\r\n      \"embarassed\",\r\n      \"sad\",\r\n      \"distraught\",\r\n   ];\r\n\r\n   const [frontPanel, setFrontPanel] = useState(\"summary\");\r\n   const [showReport, setShowReport] = useState(false);\r\n   const [avatar, setAvatar] = useState(\"default\");\r\n   const [entries, setEntries] = useState(testData.testEntries);\r\n\r\n   const [habits, setHabits] = useState(testData.testHabits);\r\n\r\n   const [allItems, setAllItems] = useState(testData.testItems);\r\n\r\n   useEffect(() => {\r\n      setEntries((prevValue) => {\r\n         return [\r\n            ...prevValue,\r\n            {\r\n               id: prevValue.length,\r\n               title: \"\",\r\n               date: todayString,\r\n               content: \"\",\r\n               mood: \"neutral\",\r\n               reason: \"\",\r\n            },\r\n         ];\r\n      });\r\n   }, [todayString]);\r\n\r\n   // > ========  Collections ================\r\n\r\n   const [itemsOverflow, setItemsOverflow] = useState(false);\r\n   const [createDisplay, setCreateDisplay] = useState(false);\r\n   const [groupingDisplay, setGroupingDisplay] = useState(false);\r\n   const [itemType, setItemType] = useState(\"general\");\r\n\r\n   const [action, setAction] = useState(\"Add\");\r\n   const [newItem, setNewItem] = useState({\r\n      id: allItems.length,\r\n      type: \"general\",\r\n      category: \"\",\r\n      content: \"\",\r\n      date: todayString,\r\n      completed: false,\r\n   });\r\n\r\n   const [listGroups, setListGroups] = useState({\r\n      propertyName: \"category\",\r\n      propertyValues: [],\r\n   });\r\n\r\n   function filterItems(array, propertyName, propertyValue) {\r\n      return array.filter((item) => {\r\n         return item[propertyName] === propertyValue;\r\n      });\r\n   }\r\n\r\n   function editItem(itemID, changeStatus) {\r\n      setAction(\"Submit Edit\");\r\n\r\n      if (changeStatus === \"status\") {\r\n         setAllItems((prevItems) => {\r\n            let temp = [...prevItems];\r\n            temp[itemID] = {\r\n               id: itemID,\r\n               type: allItems[itemID].type,\r\n               category: allItems[itemID].category,\r\n               content: allItems[itemID].content,\r\n               date: allItems[itemID].date,\r\n               completed: !allItems[itemID].completed,\r\n            };\r\n            return [...temp];\r\n         });\r\n      } else {\r\n         setCreateDisplay(true);\r\n         setNewItem({\r\n            id: itemID,\r\n            type: allItems[itemID].type,\r\n            category: allItems[itemID].category,\r\n            content: allItems[itemID].content,\r\n            date: allItems[itemID].date,\r\n            completed: allItems[itemID].completed,\r\n         });\r\n         setItemType(allItems[itemID].type);\r\n      }\r\n   }\r\n\r\n   function addItem(event) {\r\n      if (newItem.content.trim() === \"\") {\r\n         document.querySelector(\".input-content\").classList.add(\"empty-input\");\r\n      } else if (newItem.category.trim() === \"\") {\r\n         document\r\n            .querySelector(\".input-content\")\r\n            .classList.remove(\"empty-input\");\r\n         document.querySelector(\".input-category\").classList.add(\"empty-input\");\r\n      } else {\r\n         document\r\n            .querySelector(\".input-content\")\r\n            .classList.remove(\"empty-input\");\r\n         document\r\n            .querySelector(\".input-category\")\r\n            .classList.remove(\"empty-input\");\r\n\r\n         setAllItems((prevItems) => {\r\n            if (action === \"Add\") {\r\n               return [...prevItems, newItem];\r\n            } else {\r\n               let temp = [...prevItems];\r\n               temp[newItem.id] = newItem;\r\n               return [...temp];\r\n            }\r\n         });\r\n\r\n         setCreateDisplay(false);\r\n         setAction(\"Add\");\r\n         setNewItem((prevValue) => ({\r\n            id: prevValue.id + 1,\r\n            todo: \"general\",\r\n            category: \"\",\r\n            content: \"\",\r\n            date: todayString,\r\n            completed: false,\r\n         }));\r\n      }\r\n\r\n      areItemsOverflowing();\r\n      event.preventDefault();\r\n   }\r\n\r\n   function removeItem(itemID) {\r\n      setAllItems((prevItems) => {\r\n         return prevItems.filter((item) => {\r\n            return item.id !== itemID;\r\n         });\r\n      });\r\n\r\n      areItemsOverflowing();\r\n   }\r\n\r\n   function optionSelected(grouping, option) {\r\n      if (grouping === \"category-suggestions\") {\r\n         setNewItem((prevContent) => {\r\n            return {\r\n               ...prevContent,\r\n               [\"category\"]: option,\r\n            };\r\n         });\r\n      } else {\r\n         listGrouping(grouping);\r\n         setGroupingDisplay(false);\r\n      }\r\n   }\r\n\r\n   function listGrouping(property) {\r\n      let temp = allItems.map((item) => item[property]);\r\n      temp.sort();\r\n\r\n      setListGroups({\r\n         propertyName: property,\r\n         propertyValues: [...new Set(temp)],\r\n      });\r\n   }\r\n\r\n   function changeGroupingDisplay(event) {\r\n      if (event.currentTarget.getAttribute(\"name\") === \"Edit groupings\") {\r\n         setGroupingDisplay(!groupingDisplay);\r\n      } else {\r\n         setGroupingDisplay(false);\r\n      }\r\n   }\r\n\r\n   function changeCreateDisplay() {\r\n      setCreateDisplay(!createDisplay);\r\n      setNewItem({\r\n         id: allItems.length,\r\n         type: \"general\",\r\n         category: \"\",\r\n         content: \"\",\r\n         date: todayString,\r\n         completed: false,\r\n      });\r\n      setItemType(\"general\");\r\n   }\r\n\r\n   function areItemsOverflowing() {\r\n      if (\r\n         document.querySelector(\".list-container\").scrollHeight >\r\n         document.querySelector(\".list-container\").offsetHeight\r\n      ) {\r\n         setItemsOverflow(true);\r\n      } else {\r\n         setItemsOverflow(false);\r\n      }\r\n   }\r\n\r\n   return (\r\n      <div id=\"app-container\">\r\n         <Header\r\n            showReport={showReport}\r\n            setShowReport={setShowReport}\r\n            setFrontPanel={setFrontPanel}\r\n         />\r\n         <Avatar avatar={avatar} setAvatar={setAvatar} />\r\n         <Report\r\n            //States\r\n            today={today}\r\n            todayString={todayString}\r\n            avatar={avatar}\r\n            allItems={allItems}\r\n            entries={entries}\r\n            habits={habits}\r\n            //Actions\r\n            filterItems={filterItems}\r\n            showReport={showReport}\r\n         />\r\n         <Dashboard\r\n            // States & Actions\r\n            today={today}\r\n            todayString={todayString}\r\n            frontPanel={frontPanel}\r\n            allMoods={allMoods}\r\n            avatar={avatar}\r\n            entries={entries}\r\n            setEntries={setEntries}\r\n            habits={habits}\r\n            setHabits={setHabits}\r\n            allItems={allItems}\r\n            setAllItems={setAllItems}\r\n            listGroups={listGroups}\r\n            newItem={newItem}\r\n            setNewItem={setNewItem}\r\n            itemType={itemType}\r\n            setItemType={setItemType}\r\n            itemsOverflow={itemsOverflow}\r\n            createDisplay={createDisplay}\r\n            groupingDisplay={groupingDisplay}\r\n            action={action}\r\n            // Actions\r\n            filterItems={filterItems}\r\n            listGrouping={listGrouping}\r\n            addItem={addItem}\r\n            removeItem={removeItem}\r\n            editItem={editItem}\r\n            optionSelected={optionSelected}\r\n            changeCreateDisplay={changeCreateDisplay}\r\n            changeGroupingDisplay={changeGroupingDisplay}\r\n         />\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\react-frontend-journal\\src\\testData.js",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\react-frontend-journal\\src\\components\\Header.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\react-frontend-journal\\src\\components\\Dashboard.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\react-frontend-journal\\src\\components\\avatar\\Avatar.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\react-frontend-journal\\src\\components\\log\\Report.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\react-frontend-journal\\src\\components\\avatar\\Animal.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\react-frontend-journal\\src\\components\\log\\Tracker.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\react-frontend-journal\\src\\components\\collections\\Collections.jsx",["178"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Collections.css\";\r\n\r\nimport List from \"../global/List\";\r\nimport Dropdown from \"../global/Dropdown\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport Collapse from \"@material-ui/core/Collapse\";\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\r\n\r\nfunction Collections({\r\n   // States\r\n   todayString,\r\n   frontPanel,\r\n   allItems,\r\n   newItem,\r\n   setNewItem,\r\n   itemType,\r\n   setItemType,\r\n   listGroups,\r\n   itemsOverflow,\r\n   createDisplay,\r\n   groupingDisplay,\r\n   action,\r\n   //Functions\r\n   filterItems,\r\n   listGrouping,\r\n   addItem,\r\n   removeItem,\r\n   editItem,\r\n   optionSelected,\r\n   changeCreateDisplay,\r\n   changeGroupingDisplay,\r\n}) {\r\n   const [moveUp, setMoveUp] = useState(false);\r\n   const [headerDisplay, setHeaderDisplay] = useState(\"\");\r\n   const [suggestionDisplay, setSuggestionDisplay] = useState(false);\r\n\r\n   const [categories, setCategories] = useState([]);\r\n\r\n   useEffect(() => {\r\n      const categoryList = [\r\n         ...new Set(allItems.map((item) => item[\"category\"])),\r\n      ];\r\n      setCategories(categoryList.sort());\r\n      listGrouping(listGroups.propertyName);\r\n   }, [allItems]);\r\n\r\n   function updateItem(event) {\r\n      const { name, value } = event.target;\r\n\r\n      if (name === \"type\") {\r\n         setItemType(value);\r\n      }\r\n\r\n      setNewItem((prevValue) => {\r\n         return {\r\n            ...prevValue,\r\n            [name]: value,\r\n         };\r\n      });\r\n\r\n      event.stopPropagation();\r\n   }\r\n\r\n   function moveDisplayUp(event) {\r\n      if (event.type === \"mouseenter\") {\r\n         setMoveUp(true);\r\n      } else {\r\n         setMoveUp(false);\r\n      }\r\n   }\r\n\r\n   function changeHeaderDisplay(event) {\r\n      let content = event.currentTarget.getAttribute(\"name\");\r\n      setHeaderDisplay(content);\r\n   }\r\n\r\n   function showSuggestions() {\r\n      setSuggestionDisplay(!suggestionDisplay);\r\n   }\r\n\r\n   return (\r\n      <div\r\n         id=\"collections\"\r\n         className={frontPanel === \"collections\" ? \"show\" : \"\"}\r\n      >\r\n         <div className=\"header\">\r\n            <div className={moveUp ? \"move-up header-text\" : \"header-text\"}>\r\n               <h3>Collections</h3>\r\n               <h3>{headerDisplay}</h3>\r\n            </div>\r\n            <div\r\n               onMouseEnter={moveDisplayUp}\r\n               onMouseLeave={moveDisplayUp}\r\n               className=\"icon-container\"\r\n            >\r\n               <AddIcon\r\n                  onClick={changeCreateDisplay}\r\n                  onMouseOver={changeHeaderDisplay}\r\n                  className=\"btn-icon\"\r\n                  name=\"Add an item\"\r\n               />\r\n               <EditIcon\r\n                  onClick={changeGroupingDisplay}\r\n                  onMouseOver={changeHeaderDisplay}\r\n                  className=\"btn-icon\"\r\n                  name=\"Edit groupings\"\r\n               />\r\n            </div>\r\n         </div>\r\n\r\n         <div\r\n            className={\r\n               \"suggestions grouping-options\" + (groupingDisplay ? \" open\" : \"\")\r\n            }\r\n         >\r\n            <ExpandLessIcon\r\n               onClick={changeGroupingDisplay}\r\n               className=\"btn-icon create-close-btn\"\r\n            />\r\n            <ul>\r\n               {[\"category\", \"date\", \"type\"].map((property, index) => {\r\n                  return (\r\n                     <Dropdown\r\n                        key={index}\r\n                        option={property}\r\n                        optionSelected={optionSelected}\r\n                        grouping={property}\r\n                     />\r\n                  );\r\n               })}\r\n            </ul>\r\n         </div>\r\n\r\n         <div className={\"create-item\" + (createDisplay ? \" show\" : \"\")}>\r\n            <ExpandLessIcon\r\n               onClick={changeCreateDisplay}\r\n               className=\"btn-icon create-close-btn\"\r\n            />\r\n            <form>\r\n               <div className=\"input-type-container\">\r\n                  <input\r\n                     type=\"radio\"\r\n                     id=\"radio-general\"\r\n                     className=\"input-radio general\"\r\n                     onChange={updateItem}\r\n                     name=\"type\"\r\n                     value=\"general\"\r\n                     checked={itemType === \"general\" ? true : false}\r\n                  ></input>\r\n                  <label htmlFor=\"radio-general\">General</label>\r\n                  <input\r\n                     type=\"radio\"\r\n                     id=\"radio-todo\"\r\n                     className=\"input-radio todo\"\r\n                     onChange={updateItem}\r\n                     name=\"type\"\r\n                     value=\"todo\"\r\n                     checked={itemType === \"todo\" ? true : false}\r\n                  ></input>\r\n                  <label htmlFor=\"radio-todo\">To Do</label>\r\n                  <input\r\n                     type=\"radio\"\r\n                     id=\"radio-event\"\r\n                     className=\"input-radio event\"\r\n                     onChange={updateItem}\r\n                     name=\"type\"\r\n                     value=\"event\"\r\n                     checked={itemType === \"event\" ? true : false}\r\n                  ></input>\r\n                  <label htmlFor=\"radio-event\">Event</label>\r\n               </div>\r\n\r\n               <input\r\n                  className=\"input-content\"\r\n                  onChange={updateItem}\r\n                  name=\"content\"\r\n                  value={newItem.content}\r\n                  placeholder=\"Item\"\r\n                  minLength=\"1\"\r\n               ></input>\r\n               <input\r\n                  className=\"input-category\"\r\n                  onChange={updateItem}\r\n                  onFocus={showSuggestions}\r\n                  onBlur={showSuggestions}\r\n                  name=\"category\"\r\n                  value={newItem.category}\r\n                  placeholder=\"Category\"\r\n                  minLength=\"1\"\r\n               ></input>\r\n               <Collapse in={suggestionDisplay}>\r\n                  <div className=\"suggestions\">\r\n                     <ul>\r\n                        {categories.map((category, index) => {\r\n                           return (\r\n                              <Dropdown\r\n                                 key={index}\r\n                                 option={category}\r\n                                 optionSelected={optionSelected}\r\n                                 grouping=\"category-suggestions\"\r\n                              />\r\n                           );\r\n                        })}\r\n                     </ul>\r\n                  </div>\r\n               </Collapse>\r\n               <input\r\n                  className=\"input-date\"\r\n                  type=\"date\"\r\n                  min={todayString}\r\n                  onChange={updateItem}\r\n                  name=\"date\"\r\n                  value={newItem.date}\r\n               ></input>\r\n               <button className=\"create-btn\" onClick={addItem}>\r\n                  {action}\r\n               </button>\r\n            </form>\r\n         </div>\r\n\r\n         <div className=\"list-container\">\r\n            {listGroups.propertyValues.map((grouping, index) => {\r\n               let listItems = filterItems(\r\n                  allItems,\r\n                  listGroups.propertyName,\r\n                  grouping\r\n               );\r\n               return (\r\n                  <List\r\n                     key={index}\r\n                     listTitle={grouping}\r\n                     items={listItems}\r\n                     removeItem={removeItem}\r\n                     editItem={editItem}\r\n                  />\r\n               );\r\n            })}\r\n         </div>\r\n         <div className=\"fade-indicator\">\r\n            <ExpandMoreIcon\r\n               className={\"btn-icon expand\" + (itemsOverflow ? \" show\" : \"\")}\r\n            />\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Collections;\r\n","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\react-frontend-journal\\src\\components\\journal\\JournalEntry.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\react-frontend-journal\\src\\components\\summary\\DatesBar\\DatesBar.jsx",["179","180"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./DatesBar.css\";\r\nimport Day from \"./Day\";\r\n\r\nfunction DatesBar({ today, allItems, filterItems }) {\r\n   const [todayMonth, todayDate, todayYear] = today\r\n      .toLocaleDateString(\"en-US\")\r\n      .split(\"/\");\r\n   const lastDay = new Date(todayYear, todayMonth, 0).getDate();\r\n\r\n   let dateArray = [];\r\n   for (let i = 1; i <= lastDay; i++) {\r\n      dateArray.push(new Date(todayYear, todayMonth - 1, i));\r\n   }\r\n\r\n   const [todoDates, setTodoDates] = useState([]);\r\n   const [eventDates, setEventDates] = useState([]);\r\n\r\n   useEffect(() => {\r\n      setTodoDates(\r\n         filterItems(allItems, \"type\", \"todo\").map((item) => item.date)\r\n      );\r\n      setEventDates(\r\n         filterItems(allItems, \"type\", \"event\").map((item) => item.date)\r\n      );\r\n   }, [allItems]);\r\n\r\n   return (\r\n      <div id=\"dates-bar\">\r\n         {dateArray.map((date, index) => {\r\n            return (\r\n               <Day\r\n                  key={index}\r\n                  date={date}\r\n                  todoDates={todoDates}\r\n                  eventDates={eventDates}\r\n               />\r\n            );\r\n         })}\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default DatesBar;\r\n","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\react-frontend-journal\\src\\components\\summary\\TodaySummary\\TodaySummary.jsx",["181"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./TodaySummary.css\";\r\n\r\nimport List from \"../../global/List\";\r\nimport Habit from \"./Habit\";\r\n\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\r\n\r\nfunction TodaySummary({\r\n   // States\r\n   todayString,\r\n   allItems,\r\n   habits,\r\n   setHabits,\r\n   // Actions\r\n   filterItems,\r\n   removeItem,\r\n   editItem,\r\n}) {\r\n   const [todoItems, setTodoItems] = useState([]);\r\n   const [eventItems, setEventItems] = useState([]);\r\n   const [action, setAction] = useState(\"CheckOff\");\r\n\r\n   useEffect(() => {\r\n      let temp = filterItems(allItems, \"date\", todayString);\r\n      setTodoItems(filterItems(temp, \"type\", \"todo\"));\r\n      setEventItems(filterItems(temp, \"type\", \"event\"));\r\n   }, [allItems]);\r\n\r\n   // > ============ HANDLING HABITS ====================================\r\n\r\n   const [createHabit, setHabitDisplay] = useState(false);\r\n   const [habitInFocus, setHabitInFocus] = useState(\"\");\r\n   const [displayWarning, setDisplayWarning] = useState(false);\r\n\r\n   const [newHabit, setNewHabit] = useState({\r\n      id: habits.length,\r\n      habit: \"\",\r\n      abbr: \"\",\r\n      dates: [todayString],\r\n      completed: [false],\r\n   });\r\n\r\n   function changeDisplayWarning(event) {\r\n      setDisplayWarning(!displayWarning);\r\n      event.preventDefault();\r\n   }\r\n\r\n   function displayHabit(event) {\r\n      if (event.type === \"mouseenter\") {\r\n         setHabitInFocus(event.currentTarget.getAttribute(\"habit\"));\r\n      } else {\r\n         setHabitInFocus(\"\");\r\n      }\r\n   }\r\n\r\n   function enterEditMode() {\r\n      setAction(\"Edit\");\r\n   }\r\n\r\n   function editHabit(event) {\r\n      try {\r\n         const habitID = event.target.getAttribute(\"value\");\r\n\r\n         if (action === \"CheckOff\") {\r\n            habits[habitID].dates = [\r\n               ...new Set([...habits[habitID].dates, todayString]),\r\n            ];\r\n            let indexToUpdate = habits[habitID].dates.findIndex(\r\n               (date) => date === todayString\r\n            );\r\n            habits[habitID].completed[indexToUpdate] =\r\n               \"true\" === event.target.getAttribute(\"status\");\r\n         } else {\r\n            changeCreateDisplay(event);\r\n\r\n            setNewHabit({\r\n               id: habits[habitID].id,\r\n               habit: habits[habitID].habit,\r\n               abbr: habits[habitID].abbr,\r\n               dates: habits[habitID].dates,\r\n               completed: habits[habitID].completed,\r\n            });\r\n         }\r\n      } catch (error) {\r\n         console.log(error);\r\n      }\r\n   }\r\n\r\n   function removeHabit(event) {\r\n      setHabits((prevValue) => {\r\n         return prevValue.filter((habit) => {\r\n            return habit.id !== newHabit.id;\r\n         });\r\n      });\r\n\r\n      changeDisplayWarning(!displayWarning);\r\n      setHabitDisplay(!createHabit);\r\n      setAction(\"CheckOff\");\r\n      event.preventDefault();\r\n   }\r\n\r\n   function addHabit(event) {\r\n      if (newHabit.habit.trim() === \"\") {\r\n         document.querySelector(\".input-habit\").classList.add(\"empty-input\");\r\n      } else if (newHabit.abbr === \"\") {\r\n         document.querySelector(\".input-habit\").classList.remove(\"empty-input\");\r\n         document.querySelector(\".input-abbr\").classList.add(\"empty-input\");\r\n      } else {\r\n         document.querySelector(\".input-habit\").classList.remove(\"empty-input\");\r\n         document.querySelector(\".input-abbr\").classList.remove(\"empty-input\");\r\n\r\n         setHabits((prevHabits) => {\r\n            if (action === \"Add\") {\r\n               return [...prevHabits, newHabit];\r\n            } else {\r\n               let temp = [...prevHabits];\r\n               temp[newHabit.id] = newHabit;\r\n               return [...temp];\r\n            }\r\n         });\r\n\r\n         setHabitDisplay(false);\r\n         setAction(\"CheckOff\");\r\n         setNewHabit((prevValue) => ({\r\n            id: prevValue.id + 1,\r\n            habit: \"\",\r\n            abbr: \"\",\r\n            dates: [todayString],\r\n            completed: [false],\r\n         }));\r\n      }\r\n\r\n      event.preventDefault();\r\n   }\r\n\r\n   function updateHabit(event) {\r\n      const { name, value } = event.target;\r\n      setNewHabit((prevValue) => {\r\n         return {\r\n            ...prevValue,\r\n            [name]: value,\r\n         };\r\n      });\r\n\r\n      event.stopPropagation();\r\n   }\r\n\r\n   function changeCreateDisplay(event) {\r\n      setAction(event.currentTarget.getAttribute(\"name\"));\r\n\r\n      if (event.target.getAttribute(\"name\") === \"close-btn\") {\r\n         setHabitDisplay(!createHabit);\r\n         setAction(\"CheckOff\");\r\n      } else if (!createHabit || action !== \"Edit\") {\r\n         setHabitDisplay(!createHabit);\r\n      }\r\n\r\n      setNewHabit({\r\n         id: habits.length,\r\n         habit: \"\",\r\n         abbr: \"\",\r\n         dates: [todayString],\r\n         completed: [false],\r\n      });\r\n   }\r\n\r\n   return (\r\n      <div id=\"today-container\">\r\n         <div id=\"habits-container\">\r\n            <div className=\"habit-header\">\r\n               <div className=\"indicator\"></div>\r\n               <h4>{(action === \"Edit\" ? \"Edit \" : \"\") + \"Habits\"}</h4>\r\n               <div>\r\n                  <AddIcon\r\n                     onClick={changeCreateDisplay}\r\n                     className=\"btn-icon habits-icon\"\r\n                     name=\"Add\"\r\n                  />\r\n                  <EditIcon\r\n                     onClick={enterEditMode}\r\n                     className=\"btn-icon habits-icon\"\r\n                     name=\"Edit\"\r\n                  />\r\n               </div>\r\n            </div>\r\n\r\n            <div className=\"habit-indicators\">\r\n               {habits.map((habit, index) => {\r\n                  return (\r\n                     <Habit\r\n                        key={index}\r\n                        todayString={todayString}\r\n                        habit={habit}\r\n                        displayHabit={displayHabit}\r\n                        habitInFocus={habitInFocus}\r\n                        updateHabit={updateHabit}\r\n                        editHabit={editHabit}\r\n                        action={action}\r\n                     />\r\n                  );\r\n               })}\r\n            </div>\r\n            <div className={\"habit-text\"}>{habitInFocus}</div>\r\n         </div>\r\n         <div\r\n            className=\"create-item\"\r\n            style={\r\n               createHabit\r\n                  ? {\r\n                       top: `${\r\n                          document.querySelector(\"#habits-container\")\r\n                             .clientHeight\r\n                       }px`,\r\n                    }\r\n                  : {}\r\n            }\r\n         >\r\n            <ExpandLessIcon\r\n               onClick={changeCreateDisplay}\r\n               className=\"btn-icon create-close-btn\"\r\n               name=\"close-btn\"\r\n            />\r\n            <form>\r\n               <input\r\n                  className=\"input-habit\"\r\n                  onChange={updateHabit}\r\n                  name=\"habit\"\r\n                  value={newHabit.habit}\r\n                  placeholder=\"New Habit\"\r\n                  minLength=\"1\"\r\n               ></input>\r\n               <input\r\n                  className=\"input-abbr\"\r\n                  onChange={updateHabit}\r\n                  name=\"abbr\"\r\n                  minLength=\"1\"\r\n                  maxLength=\"2\"\r\n                  value={newHabit.abbr}\r\n                  placeholder=\"Abbreviation (max 2 char.)\"\r\n               ></input>\r\n               <div\r\n                  className={\r\n                     action !== \"Add\" ? \"btn-container half\" : \"btn-container\"\r\n                  }\r\n               >\r\n                  <button onClick={addHabit} className=\"create-btn\">\r\n                     {action}\r\n                  </button>\r\n                  <button\r\n                     onClick={changeDisplayWarning}\r\n                     className={\r\n                        \"create-btn \" + (action !== \"Add\" ? \"\" : \" no-display\")\r\n                     }\r\n                  >\r\n                     Delete\r\n                  </button>\r\n                  <div\r\n                     className={\r\n                        displayWarning ? \"delete-warning\" : \"no-display\"\r\n                     }\r\n                  >\r\n                     <p>\r\n                        All records of this habit will be removed. Please\r\n                        confirm you want to proceed.\r\n                     </p>\r\n                     <div className=\"btn-container half\">\r\n                        <button onClick={removeHabit} className={\"create-btn \"}>\r\n                           Confirm\r\n                        </button>\r\n                        <button\r\n                           onClick={changeDisplayWarning}\r\n                           className={\"create-btn \"}\r\n                        >\r\n                           Nevermind\r\n                        </button>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </form>\r\n         </div>\r\n         <div className=\"today-lists\">\r\n            <div>\r\n               <div className=\"indicator event\"></div>\r\n               <List\r\n                  key=\"todayEvent\"\r\n                  listTitle=\"Event\"\r\n                  items={eventItems}\r\n                  removeItem={removeItem}\r\n                  editItem={editItem}\r\n               />\r\n            </div>\r\n            <div>\r\n               <div className=\"indicator todo\"></div>\r\n               <List\r\n                  key=\"todayTodo\"\r\n                  listTitle=\"To Do\"\r\n                  items={todoItems}\r\n                  removeItem={removeItem}\r\n                  editItem={editItem}\r\n               />\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default TodaySummary;\r\n","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\react-frontend-journal\\src\\components\\log\\TrackerDots.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\react-frontend-journal\\src\\components\\journal\\Mood.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\react-frontend-journal\\src\\components\\summary\\DatesBar\\Day.jsx",["182"],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\react-frontend-journal\\src\\components\\summary\\TodaySummary\\Habit.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\react-frontend-journal\\src\\components\\global\\List.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\react-frontend-journal\\src\\components\\global\\Dropdown.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\react-frontend-journal\\src\\components\\global\\Item.jsx",[],{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","severity":1,"message":"188","line":6,"column":23,"nodeType":"189","messageId":"190","endLine":6,"endColumn":32},{"ruleId":"191","severity":1,"message":"192","line":26,"column":7,"nodeType":"193","endLine":26,"endColumn":17,"suggestions":"194"},{"ruleId":"191","severity":1,"message":"195","line":15,"column":7,"nodeType":"193","endLine":15,"endColumn":18,"suggestions":"196"},{"ruleId":"191","severity":1,"message":"197","line":30,"column":7,"nodeType":"193","endLine":30,"endColumn":17,"suggestions":"198"},{"ruleId":"191","severity":1,"message":"199","line":49,"column":7,"nodeType":"193","endLine":49,"endColumn":17,"suggestions":"200"},{"ruleId":"201","severity":1,"message":"202","line":270,"column":16,"nodeType":"203","messageId":"204","endLine":270,"endColumn":36,"fix":"205"},{"ruleId":"183","replacedBy":"206"},{"ruleId":"185","replacedBy":"207"},{"ruleId":"201","severity":1,"message":"202","line":164,"column":16,"nodeType":"203","messageId":"204","endLine":164,"endColumn":36,"fix":"208"},{"ruleId":"191","severity":1,"message":"199","line":49,"column":7,"nodeType":"193","endLine":49,"endColumn":17,"suggestions":"209"},{"ruleId":"187","severity":1,"message":"188","line":6,"column":23,"nodeType":"189","messageId":"190","endLine":6,"endColumn":32},{"ruleId":"191","severity":1,"message":"192","line":26,"column":7,"nodeType":"193","endLine":26,"endColumn":17,"suggestions":"210"},{"ruleId":"191","severity":1,"message":"197","line":30,"column":7,"nodeType":"193","endLine":30,"endColumn":17,"suggestions":"211"},{"ruleId":"191","severity":1,"message":"195","line":15,"column":7,"nodeType":"193","endLine":15,"endColumn":18,"suggestions":"212"},"no-native-reassign",["213"],"no-negated-in-lhs",["214"],"no-unused-vars","'todayDate' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filterItems'. Either include it or remove the dependency array. If 'filterItems' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["215"],"React Hook useEffect has missing dependencies: 'eventDates' and 'stringDate'. Either include them or remove the dependency array.",["216"],"React Hook useEffect has missing dependencies: 'filterItems' and 'todayString'. Either include them or remove the dependency array. If 'filterItems' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["217"],"React Hook useEffect has missing dependencies: 'listGrouping' and 'listGroups.propertyName'. Either include them or remove the dependency array. If 'listGrouping' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["218"],"no-useless-computed-key","Unnecessarily computed property [\"category\"] found.","Property","unnecessarilyComputedProperty",{"range":"219","text":"220"},["213"],["214"],{"range":"221","text":"220"},["222"],["223"],["224"],["225"],"no-global-assign","no-unsafe-negation",{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},{"desc":"230","fix":"231"},{"desc":"232","fix":"233"},[9573,9585],"\"category\"",[4953,4965],{"desc":"232","fix":"234"},{"desc":"226","fix":"235"},{"desc":"230","fix":"236"},{"desc":"228","fix":"237"},"Update the dependencies array to be: [allItems, filterItems]",{"range":"238","text":"239"},"Update the dependencies array to be: [eventDates, stringDate, todoDates]",{"range":"240","text":"241"},"Update the dependencies array to be: [allItems, filterItems, todayString]",{"range":"242","text":"243"},"Update the dependencies array to be: [allItems, listGrouping, listGroups.propertyName]",{"range":"244","text":"245"},{"range":"246","text":"245"},{"range":"247","text":"239"},{"range":"248","text":"243"},{"range":"249","text":"241"},[821,831],"[allItems, filterItems]",[541,552],"[eventDates, stringDate, todoDates]",[852,862],"[allItems, filterItems, todayString]",[1303,1313],"[allItems, listGrouping, listGroups.propertyName]",[1301,1311],[821,831],[846,856],[541,552]]