[{"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\index.js":"1","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\App.jsx":"2","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Dashboard.jsx":"3","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Item.jsx":"4","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Dropdown.jsx":"5","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\DatesBar.jsx":"6","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Day.jsx":"7","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\TestingFiles\\testData.jsx":"8","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Events.jsx":"9","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\TodaySummary.jsx":"10","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Collections.jsx":"11","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\List.jsx":"12","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Habit.jsx":"13","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\JournalEntry.jsx":"14","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Mood.jsx":"15"},{"size":157,"mtime":1610939225864,"results":"16","hashOfConfig":"17"},{"size":10057,"mtime":1611336238803,"results":"18","hashOfConfig":"17"},{"size":4673,"mtime":1611335151915,"results":"19","hashOfConfig":"17"},{"size":2137,"mtime":1611190699896,"results":"20","hashOfConfig":"17"},{"size":338,"mtime":1611335409575,"results":"21","hashOfConfig":"17"},{"size":1212,"mtime":1611169230417,"results":"22","hashOfConfig":"17"},{"size":1052,"mtime":1611107139800,"results":"23","hashOfConfig":"17"},{"size":718,"mtime":1611093558415,"results":"24","hashOfConfig":"17"},{"size":181,"mtime":1611095022766,"results":"25","hashOfConfig":"17"},{"size":10014,"mtime":1611254600712,"results":"26","hashOfConfig":"17"},{"size":8612,"mtime":1611336395738,"results":"27","hashOfConfig":"17"},{"size":831,"mtime":1611169700103,"results":"28","hashOfConfig":"17"},{"size":1521,"mtime":1611254576530,"results":"29","hashOfConfig":"17"},{"size":5140,"mtime":1611330386310,"results":"30","hashOfConfig":"17"},{"size":782,"mtime":1611281287242,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"mrmoat",{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"34"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"34"},"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\index.js",[],["68","69"],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\App.jsx",["70","71","72"],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Dashboard.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Item.jsx",["73"],"import React, { useState } from \"react\";\r\nimport \"./Item.css\";\r\n\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport EventOutlinedIcon from \"@material-ui/icons/EventOutlined\";\r\nimport AssignmentOutlinedIcon from \"@material-ui/icons/AssignmentOutlined\";\r\nimport FiberManualRecordIcon from \"@material-ui/icons/FiberManualRecord\";\r\n\r\nfunction Item({ content, itemID, itemType, listTitle, removeItem, editItem }) {\r\n   const [isDone, setDoneStatus] = useState(false);\r\n\r\n   function changeDoneStatus() {\r\n      setDoneStatus(!isDone);\r\n   }\r\n\r\n   function deleteItem() {\r\n      removeItem(itemID);\r\n   }\r\n\r\n   function updateItem() {\r\n      editItem(itemID);\r\n   }\r\n\r\n   return (\r\n      <div className=\"list-item\">\r\n         <li>\r\n            <FiberManualRecordIcon\r\n               className={\r\n                  \"btn-icon type-icon\" +\r\n                  (itemType === \"general\" ? \" invisible\" : \"\")\r\n               }\r\n            />\r\n            <EventOutlinedIcon\r\n               className={\r\n                  \"btn-icon type-icon\" +\r\n                  (itemType === \"event\" ? \" selected\" : \"\")\r\n               }\r\n            />\r\n            <AssignmentOutlinedIcon\r\n               className={\r\n                  \"btn-icon type-icon\" +\r\n                  (itemType === \"todo\" ? \" selected\" : \"\")\r\n               }\r\n            />\r\n            <p onClick={changeDoneStatus} className={isDone ? \"item-done\" : \"\"}>\r\n               {content}\r\n            </p>\r\n\r\n            <div className=\"item-icon-container\">\r\n               {/* <CheckIcon\r\n                  onClick={changeDoneStatus}\r\n                  className=\"btn-icon item-icon check\"\r\n               /> */}\r\n               <EditIcon\r\n                  onClick={updateItem}\r\n                  className=\"btn-icon item-icon edit\"\r\n               />\r\n               <ClearIcon\r\n                  onClick={deleteItem}\r\n                  className=\"btn-icon item-icon clear\"\r\n               />\r\n            </div>\r\n         </li>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Item;\r\n","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Dropdown.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\DatesBar.jsx",["74","75"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./DatesBar.css\";\r\nimport Day from \"./Day\";\r\n\r\nfunction DatesBar({ today, allItems, filterItems }) {\r\n   const [todayMonth, todayDate, todayYear] = today\r\n      .toLocaleDateString(\"en-US\")\r\n      .split(\"/\");\r\n   const lastDay = new Date(todayYear, todayMonth, 0).getDate();\r\n\r\n   let dateArray = [];\r\n   for (let i = 1; i <= lastDay; i++) {\r\n      dateArray.push(new Date(todayYear, todayMonth - 1, i));\r\n   }\r\n\r\n   const [todoDates, setTodoDates] = useState([]);\r\n   const [eventDates, setEventDates] = useState([]);\r\n\r\n   useEffect(() => {\r\n      setTodoDates(\r\n         filterItems(allItems, \"type\", \"todo\").map((item) => item.date)\r\n      );\r\n      setEventDates(\r\n         filterItems(allItems, \"type\", \"event\").map((item) => item.date)\r\n      );\r\n   }, [allItems]);\r\n\r\n   return (\r\n      <div id=\"dates-bar\">\r\n         {dateArray.map((date, index) => {\r\n            return (\r\n               <Day\r\n                  key={index}\r\n                  date={date}\r\n                  todoDates={todoDates}\r\n                  eventDates={eventDates}\r\n               />\r\n            );\r\n         })}\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default DatesBar;\r\n","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Day.jsx",["76"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./Day.css\";\r\n\r\nfunction Day({ date, todoDates, eventDates }) {\r\n   const dayLetter = [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"];\r\n\r\n   const stringDate = date.toISOString().substring(0, 10);\r\n\r\n   const [hasTodo, setHasTodo] = useState(false);\r\n   const [hasEvent, setHasEvent] = useState(false);\r\n\r\n   useEffect(() => {\r\n      todoDates.includes(stringDate) ? setHasTodo(true) : setHasTodo(false);\r\n      eventDates.includes(stringDate) ? setHasEvent(true) : setHasEvent(false);\r\n   }, [todoDates]);\r\n\r\n   return (\r\n      <div className=\"day-container\">\r\n         <div>\r\n            <p>{dayLetter[date.getDay()]}</p>\r\n         </div>\r\n         <div>\r\n            <p>{date.getDate()}</p>\r\n         </div>\r\n\r\n         <div>\r\n            <div\r\n               className={\r\n                  \"indicator\" +\r\n                  (hasTodo ? \" todo\" : \"\") +\r\n                  (hasEvent ? \" event\" : \"\")\r\n               }\r\n            ></div>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Day;\r\n","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\TestingFiles\\testData.jsx",["77"],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Events.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\TodaySummary.jsx",["78","79"],"import React, { useState, useEffect } from \"react\";\r\nimport \"./TodaySummary.css\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\r\n\r\nimport List from \"./List\";\r\nimport Item from \"./Item\";\r\nimport Habit from \"./Habit\";\r\n\r\nfunction TodaySummary({\r\n   // Variables\r\n   todayString,\r\n   allItems,\r\n   habits,\r\n   setHabits,\r\n   // Functions\r\n   filterItems,\r\n   removeItem,\r\n   editItem,\r\n}) {\r\n   const [todoItems, setTodoItems] = useState([]);\r\n   const [eventItems, setEventItems] = useState([]);\r\n   const [action, setAction] = useState(\"CheckOff\");\r\n\r\n   useEffect(() => {\r\n      let temp = filterItems(allItems, \"date\", todayString);\r\n      setTodoItems(filterItems(temp, \"type\", \"todo\"));\r\n      setEventItems(filterItems(temp, \"type\", \"event\"));\r\n   }, [allItems]);\r\n\r\n   // > ============ HANDLING HABITS ====================================\r\n\r\n   const [createHabit, setHabitDisplay] = useState(false);\r\n   const [habitInFocus, setHabitInFocus] = useState(\"\");\r\n   const [displayWarning, setDisplayWarning] = useState(false);\r\n\r\n   const [newHabit, setNewHabit] = useState({\r\n      id: habits.length,\r\n      habit: \"\",\r\n      abbr: \"\",\r\n      dates: [todayString],\r\n      completed: [false],\r\n   });\r\n\r\n   function changeDisplayWarning(event) {\r\n      setDisplayWarning(!displayWarning);\r\n      // if (action === \"Edit\") {\r\n      //    setDisplayWarning(!displayWarning);\r\n      // }\r\n\r\n      event.preventDefault();\r\n   }\r\n\r\n   function displayHabit(event) {\r\n      console.log(event.target);\r\n      if (event.type === \"mouseenter\") {\r\n         setHabitInFocus(event.currentTarget.getAttribute(\"habit\"));\r\n      } else {\r\n         setHabitInFocus(\"\");\r\n      }\r\n   }\r\n\r\n   function enterEditMode() {\r\n      setAction(\"Edit\");\r\n   }\r\n\r\n   function editHabit(event) {\r\n      console.log(event.target);\r\n\r\n      try {\r\n         const habitID = event.target.getAttribute(\"value\");\r\n\r\n         if (action === \"CheckOff\") {\r\n            habits[habitID].dates = [\r\n               ...new Set([...habits[habitID].dates, todayString]),\r\n            ];\r\n            let indexToUpdate = habits[habitID].dates.findIndex(\r\n               (date) => date === todayString\r\n            );\r\n            habits[habitID].completed[indexToUpdate] =\r\n               \"true\" === event.target.getAttribute(\"status\");\r\n         } else {\r\n            changeCreateDisplay(event);\r\n\r\n            setNewHabit({\r\n               id: habits[habitID].id,\r\n               habit: habits[habitID].habit,\r\n               abbr: habits[habitID].abbr,\r\n               dates: habits[habitID].dates,\r\n               completed: habits[habitID].completed,\r\n            });\r\n         }\r\n      } catch (e) {\r\n         console.log(e);\r\n      }\r\n   }\r\n\r\n   function removeHabit(event) {\r\n      console.log(event.currentTarget);\r\n      console.log(newHabit.id);\r\n\r\n      setHabits((prevValue) => {\r\n         return prevValue.filter((habit) => {\r\n            return habit.id !== newHabit.id;\r\n         });\r\n      });\r\n\r\n      changeDisplayWarning(!displayWarning);\r\n      setHabitDisplay(!createHabit);\r\n      setAction(\"CheckOff\");\r\n      event.preventDefault();\r\n   }\r\n\r\n   function addHabit(event) {\r\n      console.log(habits);\r\n\r\n      if (newHabit.habit.trim() === \"\") {\r\n         document.querySelector(\".input-habit\").classList.add(\"empty-input\");\r\n      } else if (newHabit.abbr === \"\") {\r\n         document.querySelector(\".input-habit\").classList.remove(\"empty-input\");\r\n         document.querySelector(\".input-abbr\").classList.add(\"empty-input\");\r\n      } else {\r\n         document.querySelector(\".input-habit\").classList.remove(\"empty-input\");\r\n         document.querySelector(\".input-abbr\").classList.remove(\"empty-input\");\r\n\r\n         setHabits((prevHabits) => {\r\n            if (action === \"Add\") {\r\n               return [...prevHabits, newHabit];\r\n            } else {\r\n               let temp = [...prevHabits];\r\n               temp[newHabit.id] = newHabit;\r\n               return [...temp];\r\n            }\r\n         });\r\n\r\n         setHabitDisplay(false);\r\n         setAction(\"CheckOff\");\r\n         setNewHabit((prevValue) => ({\r\n            id: prevValue.id + 1,\r\n            habit: \"\",\r\n            abbr: \"\",\r\n            dates: [todayString],\r\n            completed: [false],\r\n         }));\r\n      }\r\n\r\n      event.preventDefault();\r\n   }\r\n\r\n   function updateHabit(event) {\r\n      const { name, value } = event.target;\r\n      setNewHabit((prevValue) => {\r\n         return {\r\n            ...prevValue,\r\n            [name]: value,\r\n         };\r\n      });\r\n\r\n      event.stopPropagation();\r\n   }\r\n\r\n   function changeCreateDisplay(event) {\r\n      console.log(event.target);\r\n      setAction(event.currentTarget.getAttribute(\"name\"));\r\n\r\n      if (event.target.getAttribute(\"name\") === \"close-btn\") {\r\n         setHabitDisplay(!createHabit);\r\n         setAction(\"CheckOff\");\r\n      } else if (!createHabit || action !== \"Edit\") {\r\n         setHabitDisplay(!createHabit);\r\n      }\r\n\r\n      setNewHabit({\r\n         id: habits.length,\r\n         habit: \"\",\r\n         abbr: \"\",\r\n         dates: [todayString],\r\n         completed: [false],\r\n      });\r\n   }\r\n\r\n   return (\r\n      <div id=\"today-container\">\r\n         <div id=\"habits-container\">\r\n            <div className=\"habit-header\">\r\n               <h4>{(action === \"Edit\" ? \"Edit \" : \"\") + \"Habits\"}</h4>\r\n               <div>\r\n                  <AddIcon\r\n                     onClick={changeCreateDisplay}\r\n                     // onMouseOver={changeHeaderDisplay}\r\n                     className=\"btn-icon habits-icon\"\r\n                     name=\"Add\"\r\n                  />\r\n                  <EditIcon\r\n                     onClick={enterEditMode}\r\n                     className=\"btn-icon habits-icon\"\r\n                     name=\"Edit\"\r\n                  />\r\n               </div>\r\n            </div>\r\n\r\n            <div className=\"habit-indicators\">\r\n               {habits.map((habit, index) => {\r\n                  return (\r\n                     <Habit\r\n                        key={index}\r\n                        todayString={todayString}\r\n                        habit={habit}\r\n                        displayHabit={displayHabit}\r\n                        habitInFocus={habitInFocus}\r\n                        updateHabit={updateHabit}\r\n                        editHabit={editHabit}\r\n                        action={action}\r\n                     />\r\n                  );\r\n               })}\r\n            </div>\r\n            <div className={\"habit-text\"}>{habitInFocus}</div>\r\n         </div>\r\n         <div\r\n            className=\"create-item\"\r\n            style={\r\n               createHabit\r\n                  ? {\r\n                       top: `${\r\n                          document.querySelector(\"#habits-container\")\r\n                             .clientHeight\r\n                       }px`,\r\n                    }\r\n                  : {}\r\n            }\r\n         >\r\n            <ExpandLessIcon\r\n               onClick={changeCreateDisplay}\r\n               className=\"btn-icon create-close-btn\"\r\n               name=\"close-btn\"\r\n            />\r\n            <form>\r\n               <input\r\n                  className=\"input-habit\"\r\n                  onChange={updateHabit}\r\n                  name=\"habit\"\r\n                  value={newHabit.habit}\r\n                  placeholder=\"New Habit\"\r\n                  minLength=\"1\"\r\n               ></input>\r\n               <input\r\n                  className=\"input-abbr\"\r\n                  onChange={updateHabit}\r\n                  name=\"abbr\"\r\n                  minLength=\"1\"\r\n                  maxLength=\"2\"\r\n                  value={newHabit.abbr}\r\n                  placeholder=\"Abbreviation (max 2 char.)\"\r\n               ></input>\r\n               <div\r\n                  className={\r\n                     action !== \"Add\" ? \"btn-container half\" : \"btn-container\"\r\n                  }\r\n               >\r\n                  <button onClick={addHabit} className=\"create-btn\">\r\n                     {action}\r\n                  </button>\r\n                  <button\r\n                     onClick={changeDisplayWarning}\r\n                     className={\r\n                        \"create-btn \" + (action !== \"Add\" ? \"\" : \" no-display\")\r\n                     }\r\n                  >\r\n                     Delete\r\n                  </button>\r\n                  <div\r\n                     className={\r\n                        displayWarning ? \"delete-warning\" : \"no-display\"\r\n                     }\r\n                  >\r\n                     <p>\r\n                        All records of this habit will be removed. Please\r\n                        confirm you want to proceed.\r\n                     </p>\r\n                     <div className=\"btn-container half\">\r\n                        <button onClick={removeHabit} className={\"create-btn \"}>\r\n                           Confirm\r\n                        </button>\r\n                        <button\r\n                           onClick={changeDisplayWarning}\r\n                           className={\"create-btn \"}\r\n                        >\r\n                           Nevermind\r\n                        </button>\r\n                     </div>\r\n                  </div>\r\n               </div>\r\n            </form>\r\n         </div>\r\n         <div className=\"today-lists\">\r\n            <div>\r\n               <List\r\n                  key=\"todayEvent\"\r\n                  listTitle=\"Events\"\r\n                  items={eventItems}\r\n                  removeItem={removeItem}\r\n                  editItem={editItem}\r\n               />\r\n            </div>\r\n            <div>\r\n               <List\r\n                  key=\"todayTodo\"\r\n                  listTitle=\"To Dos\"\r\n                  items={todoItems}\r\n                  removeItem={removeItem}\r\n                  editItem={editItem}\r\n               />\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default TodaySummary;\r\n","C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Collections.jsx",["80"],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\List.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Habit.jsx",[],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\JournalEntry.jsx",["81"],"C:\\Users\\victo\\Documents\\Coding\\Web Dev\\Projects\\DailyJournal\\src\\components\\Mood.jsx",["82"],"import React, { useState } from \"react\";\r\nimport \"./Mood.css\";\r\n\r\nimport { ReactComponent as MoodSelector } from \"./images/expressions.svg\";\r\n\r\nfunction Mood({\r\n   mood,\r\n   avatar,\r\n   changeMoodFocus,\r\n   chosenMood,\r\n   updateEntry,\r\n   action,\r\n   revealChoices,\r\n}) {\r\n   return (\r\n      <div\r\n         onClick={action === \"select mood\" ? updateEntry : revealChoices}\r\n         onMouseEnter={changeMoodFocus}\r\n         onMouseLeave={changeMoodFocus}\r\n         className={\r\n            `mood-box ${mood} ${avatar}` +\r\n            (chosenMood === mood ? \"in-front\" : \"\")\r\n         }\r\n         name=\"mood\"\r\n         value={mood}\r\n         action={action}\r\n      >\r\n         <MoodSelector className=\"svg-expression\" value={mood} />\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Mood;\r\n",{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":109,"column":13,"nodeType":"89","messageId":"90","endLine":109,"endColumn":25},{"ruleId":"91","severity":1,"message":"92","line":128,"column":7,"nodeType":"93","endLine":128,"endColumn":9,"suggestions":"94"},{"ruleId":"95","severity":1,"message":"96","line":229,"column":16,"nodeType":"97","messageId":"98","endLine":229,"endColumn":36,"fix":"99"},{"ruleId":"87","severity":1,"message":"100","line":4,"column":8,"nodeType":"89","messageId":"90","endLine":4,"endColumn":17},{"ruleId":"87","severity":1,"message":"101","line":6,"column":23,"nodeType":"89","messageId":"90","endLine":6,"endColumn":32},{"ruleId":"91","severity":1,"message":"102","line":26,"column":7,"nodeType":"93","endLine":26,"endColumn":17,"suggestions":"103"},{"ruleId":"91","severity":1,"message":"104","line":15,"column":7,"nodeType":"93","endLine":15,"endColumn":18,"suggestions":"105"},{"ruleId":"87","severity":1,"message":"106","line":1,"column":8,"nodeType":"89","messageId":"90","endLine":1,"endColumn":13},{"ruleId":"87","severity":1,"message":"107","line":8,"column":8,"nodeType":"89","messageId":"90","endLine":8,"endColumn":12},{"ruleId":"91","severity":1,"message":"108","line":30,"column":7,"nodeType":"93","endLine":30,"endColumn":17,"suggestions":"109"},{"ruleId":"91","severity":1,"message":"110","line":67,"column":7,"nodeType":"93","endLine":67,"endColumn":17,"suggestions":"111"},{"ruleId":"87","severity":1,"message":"112","line":1,"column":27,"nodeType":"89","messageId":"90","endLine":1,"endColumn":36},{"ruleId":"87","severity":1,"message":"113","line":1,"column":17,"nodeType":"89","messageId":"90","endLine":1,"endColumn":25},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'selectAvatar' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'todayString'. Either include it or remove the dependency array.","ArrayExpression",["116"],"no-useless-computed-key","Unnecessarily computed property [\"category\"] found.","Property","unnecessarilyComputedProperty",{"range":"117","text":"118"},"'CheckIcon' is defined but never used.","'todayDate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'filterItems'. Either include it or remove the dependency array. If 'filterItems' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["119"],"React Hook useEffect has missing dependencies: 'eventDates' and 'stringDate'. Either include them or remove the dependency array.",["120"],"'React' is defined but never used.","'Item' is defined but never used.","React Hook useEffect has missing dependencies: 'filterItems' and 'todayString'. Either include them or remove the dependency array. If 'filterItems' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["121"],"React Hook useEffect has a missing dependency: 'listGrouping'. Either include it or remove the dependency array. If 'listGrouping' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["122"],"'useEffect' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},[7480,7492],"\"category\"",{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},"Update the dependencies array to be: [todayString]",{"range":"133","text":"134"},"Update the dependencies array to be: [allItems, filterItems]",{"range":"135","text":"136"},"Update the dependencies array to be: [eventDates, stringDate, todoDates]",{"range":"137","text":"138"},"Update the dependencies array to be: [allItems, filterItems, todayString]",{"range":"139","text":"140"},"Update the dependencies array to be: [allItems, listGrouping]",{"range":"141","text":"142"},[4502,4504],"[todayString]",[821,831],"[allItems, filterItems]",[541,552],"[eventDates, stringDate, todoDates]",[866,876],"[allItems, filterItems, todayString]",[1924,1934],"[allItems, listGrouping]"]